{"ast":null,"code":"var wrap = require('./wrap'),\n    dir = require('./keys'),\n    str = require('./str'),\n    is = require('./is');\n\nmodule.exports = function key(k, v) {\n  var set = arguments.length > 1,\n      keys = is.fn(k) ? [] : str(k).split('.').filter(Boolean),\n      root = keys.shift();\n  return function deep(o, i) {\n    var masked = {};\n    return !o ? undefined : !is.num(k) && !k ? set ? replace(o, v) : o : is.arr(k) ? (k.map(copy), masked) : o[k] || !keys.length ? set ? (o[k] = is.fn(v) ? v(o[k], i) : v, o) : is.fn(k) ? k(o) : o[k] : set ? (key(keys.join('.'), v)(o[root] ? o[root] : o[root] = {}), o) : key(keys.join('.'))(o[root]);\n\n    function copy(k) {\n      var val = key(k)(o);\n      val = is.fn(v) ? v(val) : val == undefined ? v : val;\n      if (val != undefined) key(k, is.fn(val) ? wrap(val) : val)(masked);\n    }\n\n    function replace(o, v) {\n      dir(o).map(function (k) {\n        delete o[k];\n      });\n      dir(v).map(function (k) {\n        o[k] = v[k];\n      });\n      return o;\n    }\n  };\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/utilise/key.js"],"names":["wrap","require","dir","str","is","module","exports","key","k","v","set","arguments","length","keys","fn","split","filter","Boolean","root","shift","deep","o","i","masked","undefined","num","replace","arr","map","copy","join","val"],"mappings":"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","sourcesContent":["var wrap = require('./wrap')\n  , dir = require('./keys')\n  , str = require('./str')\n  , is = require('./is')\n\nmodule.exports = function key(k, v){ \n  var set = arguments.length > 1\n    , keys = is.fn(k) ? [] : str(k).split('.').filter(Boolean)\n    , root = keys.shift()\n\n  return function deep(o, i){\n    var masked = {}\n    \n    return !o ? undefined \n         : !is.num(k) && !k ? (set ? replace(o, v) : o)\n         : is.arr(k) ? (k.map(copy), masked)\n         : o[k] || !keys.length ? (set ? ((o[k] = is.fn(v) ? v(o[k], i) : v), o)\n                                       :  (is.fn(k) ? k(o) : o[k]))\n                                : (set ? (key(keys.join('.'), v)(o[root] ? o[root] : (o[root] = {})), o)\n                                       :  key(keys.join('.'))(o[root]))\n\n    function copy(k){\n      var val = key(k)(o)\n      val = is.fn(v)       ? v(val) \n          : val == undefined ? v\n                           : val\n    if (val != undefined) \n        key(k, is.fn(val) ? wrap(val) : val)(masked)\n    }\n\n    function replace(o, v) {\n      dir(o).map(function(k){ delete o[k] })\n      dir(v).map(function(k){ o[k] = v[k] })\n      return o\n    }\n  }\n}"]},"metadata":{},"sourceType":"script"}