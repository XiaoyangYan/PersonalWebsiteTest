{"ast":null,"code":"'use strict';\n\nvar stream = require('readable-stream');\n\nvar util = require('util');\n\nvar Readable = stream.Readable;\nmodule.exports = ReaddirpReadable;\nutil.inherits(ReaddirpReadable, Readable);\n\nfunction ReaddirpReadable(opts) {\n  if (!(this instanceof ReaddirpReadable)) return new ReaddirpReadable(opts);\n  opts = opts || {};\n  opts.objectMode = true;\n  Readable.call(this, opts); // backpressure not implemented at this point\n\n  this.highWaterMark = Infinity;\n  this._destroyed = false;\n  this._paused = false;\n  this._warnings = [];\n  this._errors = [];\n\n  this._pauseResumeErrors();\n}\n\nvar proto = ReaddirpReadable.prototype;\n\nproto._pauseResumeErrors = function () {\n  var self = this;\n  self.on('pause', function () {\n    self._paused = true;\n  });\n  self.on('resume', function () {\n    if (self._destroyed) return;\n    self._paused = false;\n\n    self._warnings.forEach(function (err) {\n      self.emit('warn', err);\n    });\n\n    self._warnings.length = 0;\n\n    self._errors.forEach(function (err) {\n      self.emit('error', err);\n    });\n\n    self._errors.length = 0;\n  });\n}; // called for each entry\n\n\nproto._processEntry = function (entry) {\n  if (this._destroyed) return;\n  this.push(entry);\n};\n\nproto._read = function () {};\n\nproto.destroy = function () {\n  // when stream is destroyed it will emit nothing further, not even errors or warnings\n  this.push(null);\n  this.readable = false;\n  this._destroyed = true;\n  this.emit('close');\n};\n\nproto._done = function () {\n  this.push(null);\n}; // we emit errors and warnings async since we may handle errors like invalid args\n// within the initial event loop before any event listeners subscribed\n\n\nproto._handleError = function (err) {\n  var self = this;\n  setImmediate(function () {\n    if (self._paused) return self._warnings.push(err);\n    if (!self._destroyed) self.emit('warn', err);\n  });\n};\n\nproto._handleFatalError = function (err) {\n  var self = this;\n  setImmediate(function () {\n    if (self._paused) return self._errors.push(err);\n    if (!self._destroyed) self.emit('error', err);\n  });\n};\n\nfunction createStreamAPI() {\n  var stream = new ReaddirpReadable();\n  return {\n    stream: stream,\n    processEntry: stream._processEntry.bind(stream),\n    done: stream._done.bind(stream),\n    handleError: stream._handleError.bind(stream),\n    handleFatalError: stream._handleFatalError.bind(stream)\n  };\n}\n\nmodule.exports = createStreamAPI;","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/readdirp/stream-api.js"],"names":["stream","require","util","Readable","module","exports","ReaddirpReadable","inherits","opts","objectMode","call","highWaterMark","Infinity","_destroyed","_paused","_warnings","_errors","_pauseResumeErrors","proto","prototype","self","on","forEach","err","emit","length","_processEntry","entry","push","_read","destroy","readable","_done","_handleError","setImmediate","_handleFatalError","createStreamAPI","processEntry","bind","done","handleError","handleFatalError"],"mappings":"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","sourcesContent":["'use strict';\n\nvar stream = require('readable-stream');\nvar util = require('util');\n\nvar Readable = stream.Readable;\n\nmodule.exports = ReaddirpReadable;\n\nutil.inherits(ReaddirpReadable, Readable);\n\nfunction ReaddirpReadable (opts) {\n  if (!(this instanceof ReaddirpReadable)) return new ReaddirpReadable(opts);\n\n  opts = opts || {};\n\n  opts.objectMode = true;\n  Readable.call(this, opts);\n\n  // backpressure not implemented at this point\n  this.highWaterMark = Infinity;\n\n  this._destroyed = false;\n  this._paused = false;\n  this._warnings = [];\n  this._errors = [];\n\n  this._pauseResumeErrors();\n}\n\nvar proto = ReaddirpReadable.prototype;\n\nproto._pauseResumeErrors = function () {\n  var self = this;\n  self.on('pause', function () { self._paused = true });\n  self.on('resume', function () {\n    if (self._destroyed) return;\n    self._paused = false;\n\n    self._warnings.forEach(function (err) { self.emit('warn', err) });\n    self._warnings.length = 0;\n\n    self._errors.forEach(function (err) { self.emit('error', err) });\n    self._errors.length = 0;\n  })\n}\n\n// called for each entry\nproto._processEntry = function (entry) {\n  if (this._destroyed) return;\n  this.push(entry);\n}\n\nproto._read = function () { }\n\nproto.destroy = function () {\n  // when stream is destroyed it will emit nothing further, not even errors or warnings\n  this.push(null);\n  this.readable = false;\n  this._destroyed = true;\n  this.emit('close');\n}\n\nproto._done = function () {\n  this.push(null);\n}\n\n// we emit errors and warnings async since we may handle errors like invalid args\n// within the initial event loop before any event listeners subscribed\nproto._handleError = function (err) {\n  var self = this;\n  setImmediate(function () {\n    if (self._paused) return self._warnings.push(err);\n    if (!self._destroyed) self.emit('warn', err);\n  });\n}\n\nproto._handleFatalError = function (err) {\n  var self = this;\n  setImmediate(function () {\n    if (self._paused) return self._errors.push(err);\n    if (!self._destroyed) self.emit('error', err);\n  });\n}\n\nfunction createStreamAPI () {\n  var stream = new ReaddirpReadable();\n\n  return {\n      stream           :  stream\n    , processEntry     :  stream._processEntry.bind(stream)\n    , done             :  stream._done.bind(stream)\n    , handleError      :  stream._handleError.bind(stream)\n    , handleFatalError :  stream._handleFatalError.bind(stream)\n  };\n}\n\nmodule.exports = createStreamAPI;\n"]},"metadata":{},"sourceType":"script"}