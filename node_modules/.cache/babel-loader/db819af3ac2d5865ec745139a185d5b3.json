{"ast":null,"code":"/* Generated by `npm run build`, do not edit! */\n\"use strict\";\n\nvar acorn = require(\"acorn\");\n\nif (false) {\n  throw new Error(\"acorn-private-class-elements requires acorn@^6.1.0, not \" + acorn.version);\n}\n\nvar tt = acorn.tokTypes;\nvar TokenType = acorn.TokenType;\n\nmodule.exports = function (Parser) {\n  // Only load this plugin once.\n  if (Parser.prototype.parsePrivateName) {\n    return Parser;\n  } // Make sure `Parser` comes from the same acorn as our `tt`,\n  // otherwise the comparisons fail.\n\n\n  var cur = Parser;\n\n  while (cur && cur !== acorn.Parser) {\n    cur = cur.__proto__;\n  }\n\n  if (cur !== acorn.Parser) {\n    throw new Error(\"acorn-private-class-elements does not support mixing different acorn copies\");\n  }\n\n  Parser =\n  /*@__PURE__*/\n  function (Parser) {\n    function Parser_() {\n      Parser.apply(this, arguments);\n    }\n\n    if (Parser) Parser_.__proto__ = Parser;\n    Parser_.prototype = Object.create(Parser && Parser.prototype);\n    Parser_.prototype.constructor = Parser_;\n\n    Parser_.prototype._branch = function _branch() {\n      this.__branch = this.__branch || new Parser({\n        ecmaVersion: this.options.ecmaVersion\n      }, this.input);\n      this.__branch.end = this.end;\n      this.__branch.pos = this.pos;\n      this.__branch.type = this.type;\n      this.__branch.value = this.value;\n      this.__branch.containsEsc = this.containsEsc;\n      return this.__branch;\n    };\n\n    Parser_.prototype.parsePrivateClassElementName = function parsePrivateClassElementName(element) {\n      element.computed = false;\n      element.key = this.parsePrivateName();\n\n      if (element.key.name == \"constructor\") {\n        this.raise(element.key.start, \"Classes may not have a private element named constructor\");\n      }\n\n      var accept = {\n        get: \"set\",\n        set: \"get\"\n      }[element.kind];\n      var privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1];\n\n      if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {\n        this.raise(element.start, \"Duplicate private element\");\n      }\n\n      privateBoundNames[element.key.name] = element.kind || true;\n      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name];\n      return element.key;\n    };\n\n    Parser_.prototype.parsePrivateName = function parsePrivateName() {\n      var node = this.startNode();\n      node.name = this.value;\n      this.next();\n      this.finishNode(node, \"PrivateName\");\n\n      if (this.options.allowReserved == \"never\") {\n        this.checkUnreserved(node);\n      }\n\n      return node;\n    }; // Parse # token\n\n\n    Parser_.prototype.getTokenFromCode = function getTokenFromCode(code) {\n      if (code === 35) {\n        ++this.pos;\n        var word = this.readWord1();\n        return this.finishToken(this.privateNameToken, word);\n      }\n\n      return Parser.prototype.getTokenFromCode.call(this, code);\n    }; // Manage stacks and check for undeclared private names\n\n\n    Parser_.prototype.parseClass = function parseClass(node, isStatement) {\n      this._privateBoundNamesStack = this._privateBoundNamesStack || [];\n      var privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null);\n\n      this._privateBoundNamesStack.push(privateBoundNames);\n\n      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || [];\n      var unresolvedPrivateNames = Object.create(null);\n\n      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames);\n\n      var _return = Parser.prototype.parseClass.call(this, node, isStatement);\n\n      this._privateBoundNamesStack.pop();\n\n      this._unresolvedPrivateNamesStack.pop();\n\n      if (!this._unresolvedPrivateNamesStack.length) {\n        var names = Object.keys(unresolvedPrivateNames);\n\n        if (names.length) {\n          names.sort(function (n1, n2) {\n            return unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2];\n          });\n          this.raise(unresolvedPrivateNames[names[0]], \"Usage of undeclared private name\");\n        }\n      } else {\n        Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames);\n      }\n\n      return _return;\n    }; // Parse private element access\n\n\n    Parser_.prototype.parseSubscript = function parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n      if (!this.eat(tt.dot)) {\n        return Parser.prototype.parseSubscript.call(this, base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      }\n\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.computed = false;\n\n      if (this.type == this.privateNameToken) {\n        node.property = this.parsePrivateName();\n\n        if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {\n          this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start;\n        }\n      } else {\n        node.property = this.parseIdent(true);\n      }\n\n      return this.finishNode(node, \"MemberExpression\");\n    }; // Prohibit delete of private class elements\n\n\n    Parser_.prototype.parseMaybeUnary = function parseMaybeUnary(refDestructuringErrors, sawUnary) {\n      var _return = Parser.prototype.parseMaybeUnary.call(this, refDestructuringErrors, sawUnary);\n\n      if (_return.operator == \"delete\") {\n        if (_return.argument.type == \"MemberExpression\" && _return.argument.property.type == \"PrivateName\") {\n          this.raise(_return.start, \"Private elements may not be deleted\");\n        }\n      }\n\n      return _return;\n    };\n\n    return Parser_;\n  }(Parser);\n\n  Parser.prototype.privateNameToken = new TokenType(\"privateName\");\n  return Parser;\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/acorn-node/lib/private-class-elements/index.js"],"names":["acorn","require","Error","version","tt","tokTypes","TokenType","module","exports","Parser","prototype","parsePrivateName","cur","__proto__","Parser_","apply","arguments","Object","create","constructor","_branch","__branch","ecmaVersion","options","input","end","pos","type","value","containsEsc","parsePrivateClassElementName","element","computed","key","name","raise","start","accept","get","set","kind","privateBoundNames","_privateBoundNamesStack","length","hasOwnProperty","call","_unresolvedPrivateNamesStack","node","startNode","next","finishNode","allowReserved","checkUnreserved","getTokenFromCode","code","word","readWord1","finishToken","privateNameToken","parseClass","isStatement","push","unresolvedPrivateNames","_return","pop","names","keys","sort","n1","n2","assign","parseSubscript","base","startPos","startLoc","noCalls","maybeAsyncArrow","eat","dot","startNodeAt","object","property","parseIdent","parseMaybeUnary","refDestructuringErrors","sawUnary","operator","argument"],"mappings":"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","sourcesContent":["/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar acorn = require(\"acorn\")\nif (false) {\n  throw new Error((\"acorn-private-class-elements requires acorn@^6.1.0, not \" + (acorn.version)))\n}\nvar tt = acorn.tokTypes\nvar TokenType = acorn.TokenType\n\nmodule.exports = function(Parser) {\n  // Only load this plugin once.\n  if (Parser.prototype.parsePrivateName) {\n    return Parser\n  }\n\n  // Make sure `Parser` comes from the same acorn as our `tt`,\n  // otherwise the comparisons fail.\n  var cur = Parser\n  while (cur && cur !== acorn.Parser) {\n    cur = cur.__proto__\n  }\n  if (cur !== acorn.Parser) {\n    throw new Error(\"acorn-private-class-elements does not support mixing different acorn copies\")\n  }\n\n  Parser = /*@__PURE__*/(function (Parser) {\n    function Parser_ () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) Parser_.__proto__ = Parser;\n    Parser_.prototype = Object.create( Parser && Parser.prototype );\n    Parser_.prototype.constructor = Parser_;\n\n    Parser_.prototype._branch = function _branch () {\n      this.__branch = this.__branch || new Parser({ecmaVersion: this.options.ecmaVersion}, this.input)\n      this.__branch.end = this.end\n      this.__branch.pos = this.pos\n      this.__branch.type = this.type\n      this.__branch.value = this.value\n      this.__branch.containsEsc = this.containsEsc\n      return this.__branch\n    };\n\n    Parser_.prototype.parsePrivateClassElementName = function parsePrivateClassElementName (element) {\n      element.computed = false\n      element.key = this.parsePrivateName()\n      if (element.key.name == \"constructor\") { this.raise(element.key.start, \"Classes may not have a private element named constructor\") }\n      var accept = {get: \"set\", set: \"get\"}[element.kind]\n      var privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1]\n      if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {\n        this.raise(element.start, \"Duplicate private element\")\n      }\n      privateBoundNames[element.key.name] = element.kind || true\n      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name]\n      return element.key\n    };\n\n    Parser_.prototype.parsePrivateName = function parsePrivateName () {\n      var node = this.startNode()\n      node.name = this.value\n      this.next()\n      this.finishNode(node, \"PrivateName\")\n      if (this.options.allowReserved == \"never\") { this.checkUnreserved(node) }\n      return node\n    };\n\n    // Parse # token\n    Parser_.prototype.getTokenFromCode = function getTokenFromCode (code) {\n      if (code === 35) {\n        ++this.pos\n        var word = this.readWord1()\n        return this.finishToken(this.privateNameToken, word)\n      }\n      return Parser.prototype.getTokenFromCode.call(this, code)\n    };\n\n    // Manage stacks and check for undeclared private names\n    Parser_.prototype.parseClass = function parseClass (node, isStatement) {\n      this._privateBoundNamesStack = this._privateBoundNamesStack || []\n      var privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null)\n      this._privateBoundNamesStack.push(privateBoundNames)\n      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || []\n      var unresolvedPrivateNames = Object.create(null)\n      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames)\n      var _return = Parser.prototype.parseClass.call(this, node, isStatement)\n      this._privateBoundNamesStack.pop()\n      this._unresolvedPrivateNamesStack.pop()\n      if (!this._unresolvedPrivateNamesStack.length) {\n        var names = Object.keys(unresolvedPrivateNames)\n        if (names.length) {\n          names.sort(function (n1, n2) { return unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2]; })\n          this.raise(unresolvedPrivateNames[names[0]], \"Usage of undeclared private name\")\n        }\n      } else { Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames) }\n      return _return\n    };\n\n    // Parse private element access\n    Parser_.prototype.parseSubscript = function parseSubscript (base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n      if (!this.eat(tt.dot)) {\n        return Parser.prototype.parseSubscript.call(this, base, startPos, startLoc, noCalls, maybeAsyncArrow)\n      }\n      var node = this.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.computed = false\n      if (this.type == this.privateNameToken) {\n        node.property = this.parsePrivateName()\n        if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {\n          this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start\n        }\n      } else {\n        node.property = this.parseIdent(true)\n      }\n      return this.finishNode(node, \"MemberExpression\")\n    };\n\n    // Prohibit delete of private class elements\n    Parser_.prototype.parseMaybeUnary = function parseMaybeUnary (refDestructuringErrors, sawUnary) {\n      var _return = Parser.prototype.parseMaybeUnary.call(this, refDestructuringErrors, sawUnary)\n      if (_return.operator == \"delete\") {\n        if (_return.argument.type == \"MemberExpression\" && _return.argument.property.type == \"PrivateName\") {\n          this.raise(_return.start, \"Private elements may not be deleted\")\n        }\n      }\n      return _return\n    };\n\n    return Parser_;\n  }(Parser))\n  Parser.prototype.privateNameToken = new TokenType(\"privateName\")\n  return Parser\n}\n"]},"metadata":{},"sourceType":"script"}