{"ast":null,"code":"var aparse = require('acorn-node').parse;\n\nfunction parse(src, opts) {\n  if (!opts) opts = {};\n  return aparse(src, opts);\n}\n\nmodule.exports = function (src, file, opts) {\n  if (typeof src !== 'string') src = String(src);\n\n  try {\n    eval('throw \"STOP\"; (function () { ' + src + '\\n})()');\n    return;\n  } catch (err) {\n    if (err === 'STOP') return undefined;\n    if (err.constructor.name !== 'SyntaxError') return err;\n    return errorInfo(src, file, opts);\n  }\n};\n\nfunction errorInfo(src, file, opts) {\n  try {\n    parse(src, opts);\n  } catch (err) {\n    return new ParseError(err, src, file);\n  }\n\n  return undefined;\n}\n\nfunction ParseError(err, src, file) {\n  SyntaxError.call(this);\n  this.message = err.message.replace(/\\s+\\(\\d+:\\d+\\)$/, '');\n  this.line = err.loc.line;\n  this.column = err.loc.column + 1;\n  this.annotated = '\\n' + (file || '(anonymous file)') + ':' + this.line + '\\n' + src.split('\\n')[this.line - 1] + '\\n' + Array(this.column).join(' ') + '^' + '\\n' + 'ParseError: ' + this.message;\n}\n\nParseError.prototype = Object.create(SyntaxError.prototype);\n\nParseError.prototype.toString = function () {\n  return this.annotated;\n};\n\nParseError.prototype.inspect = function () {\n  return this.annotated;\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/syntax-error/index.js"],"names":["aparse","require","parse","src","opts","module","exports","file","String","eval","err","undefined","constructor","name","errorInfo","ParseError","SyntaxError","call","message","replace","line","loc","column","annotated","split","Array","join","prototype","Object","create","toString","inspect"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,KAAnC;;AACA,SAASA,KAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AACvB,MAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AACX,SAAOJ,MAAM,CAACG,GAAD,EAAMC,IAAN,CAAb;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAUH,GAAV,EAAeI,IAAf,EAAoBH,IAApB,EAA0B;AACvC,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6BA,GAAG,GAAGK,MAAM,CAACL,GAAD,CAAZ;;AAE7B,MAAI;AACAM,IAAAA,IAAI,CAAC,kCAAkCN,GAAlC,GAAwC,QAAzC,CAAJ;AACA;AACH,GAHD,CAIA,OAAOO,GAAP,EAAY;AACR,QAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAOC,SAAP;AACpB,QAAID,GAAG,CAACE,WAAJ,CAAgBC,IAAhB,KAAyB,aAA7B,EAA4C,OAAOH,GAAP;AAC5C,WAAOI,SAAS,CAACX,GAAD,EAAMI,IAAN,EAAYH,IAAZ,CAAhB;AACH;AACJ,CAZD;;AAcA,SAASU,SAAT,CAAoBX,GAApB,EAAyBI,IAAzB,EAA+BH,IAA/B,EAAqC;AACjC,MAAI;AAAEF,IAAAA,KAAK,CAACC,GAAD,EAAKC,IAAL,CAAL;AAAiB,GAAvB,CACA,OAAOM,GAAP,EAAY;AACR,WAAO,IAAIK,UAAJ,CAAeL,GAAf,EAAoBP,GAApB,EAAyBI,IAAzB,CAAP;AACH;;AACD,SAAOI,SAAP;AACH;;AAED,SAASI,UAAT,CAAqBL,GAArB,EAA0BP,GAA1B,EAA+BI,IAA/B,EAAqC;AACjCS,EAAAA,WAAW,CAACC,IAAZ,CAAiB,IAAjB;AAEA,OAAKC,OAAL,GAAeR,GAAG,CAACQ,OAAJ,CAAYC,OAAZ,CAAoB,iBAApB,EAAuC,EAAvC,CAAf;AAEA,OAAKC,IAAL,GAAYV,GAAG,CAACW,GAAJ,CAAQD,IAApB;AACA,OAAKE,MAAL,GAAcZ,GAAG,CAACW,GAAJ,CAAQC,MAAR,GAAiB,CAA/B;AAEA,OAAKC,SAAL,GAAiB,QACVhB,IAAI,IAAI,kBADE,IAEX,GAFW,GAEL,KAAKa,IAFA,GAGX,IAHW,GAIXjB,GAAG,CAACqB,KAAJ,CAAU,IAAV,EAAgB,KAAKJ,IAAL,GAAY,CAA5B,CAJW,GAKX,IALW,GAMXK,KAAK,CAAC,KAAKH,MAAN,CAAL,CAAmBI,IAAnB,CAAwB,GAAxB,CANW,GAMoB,GANpB,GAOX,IAPW,GAQX,cARW,GAQM,KAAKR,OAR5B;AAUH;;AAEDH,UAAU,CAACY,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAcb,WAAW,CAACW,SAA1B,CAAvB;;AAEAZ,UAAU,CAACY,SAAX,CAAqBG,QAArB,GAAgC,YAAY;AACxC,SAAO,KAAKP,SAAZ;AACH,CAFD;;AAIAR,UAAU,CAACY,SAAX,CAAqBI,OAArB,GAA+B,YAAY;AACvC,SAAO,KAAKR,SAAZ;AACH,CAFD","sourcesContent":["var aparse = require('acorn-node').parse;\nfunction parse (src, opts) {\n    if (!opts) opts = {}\n    return aparse(src, opts);\n}\n\nmodule.exports = function (src, file,opts) {\n    if (typeof src !== 'string') src = String(src);\n    \n    try {\n        eval('throw \"STOP\"; (function () { ' + src + '\\n})()');\n        return;\n    }\n    catch (err) {\n        if (err === 'STOP') return undefined;\n        if (err.constructor.name !== 'SyntaxError') return err;\n        return errorInfo(src, file, opts);\n    }\n};\n\nfunction errorInfo (src, file, opts) {\n    try { parse(src,opts) }\n    catch (err) {\n        return new ParseError(err, src, file);\n    }\n    return undefined;\n}\n\nfunction ParseError (err, src, file) {\n    SyntaxError.call(this);\n    \n    this.message = err.message.replace(/\\s+\\(\\d+:\\d+\\)$/, '');\n    \n    this.line = err.loc.line;\n    this.column = err.loc.column + 1;\n    \n    this.annotated = '\\n'\n        + (file || '(anonymous file)')\n        + ':' + this.line\n        + '\\n'\n        + src.split('\\n')[this.line - 1]\n        + '\\n'\n        + Array(this.column).join(' ') + '^'\n        + '\\n'\n        + 'ParseError: ' + this.message\n    ;\n}\n\nParseError.prototype = Object.create(SyntaxError.prototype);\n\nParseError.prototype.toString = function () {\n    return this.annotated;\n};\n\nParseError.prototype.inspect = function () {\n    return this.annotated;\n};\n"]},"metadata":{},"sourceType":"script"}