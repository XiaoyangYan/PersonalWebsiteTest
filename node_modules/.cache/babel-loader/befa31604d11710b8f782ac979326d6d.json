{"ast":null,"code":"import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\nconst crc16xmodem = defineCrc('xmodem', function (buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    let code = crc >>> 8 & 0xff;\n    code ^= byte & 0xff;\n    code ^= code >>> 4;\n    crc = crc << 8 & 0xffff;\n    crc ^= code;\n    code = code << 5 & 0xffff;\n    crc ^= code;\n    code = code << 7 & 0xffff;\n    crc ^= code;\n  }\n\n  return crc;\n});\nexport default crc16xmodem;","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/crc/crc16xmodem.js"],"names":["Buffer","createBuffer","defineCrc","crc16xmodem","buf","previous","isBuffer","crc","index","length","byte","code"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,WAAW,GAAGD,SAAS,CAAC,QAAD,EAAW,UAASE,GAAT,EAAcC,QAAd,EAAwB;AAC9D,MAAI,CAACL,MAAM,CAACM,QAAP,CAAgBF,GAAhB,CAAL,EAA2BA,GAAG,GAAGH,YAAY,CAACG,GAAD,CAAlB;AAE3B,MAAIG,GAAG,GAAG,OAAOF,QAAP,KAAoB,WAApB,GAAkC,CAAC,CAACA,QAApC,GAA+C,GAAzD;;AAEA,OAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,GAAG,CAACK,MAAhC,EAAwCD,KAAK,EAA7C,EAAiD;AAC/C,UAAME,IAAI,GAAGN,GAAG,CAACI,KAAD,CAAhB;AACA,QAAIG,IAAI,GAAIJ,GAAG,KAAK,CAAT,GAAc,IAAzB;AAEAI,IAAAA,IAAI,IAAID,IAAI,GAAG,IAAf;AACAC,IAAAA,IAAI,IAAIA,IAAI,KAAK,CAAjB;AACAJ,IAAAA,GAAG,GAAIA,GAAG,IAAI,CAAR,GAAa,MAAnB;AACAA,IAAAA,GAAG,IAAII,IAAP;AACAA,IAAAA,IAAI,GAAIA,IAAI,IAAI,CAAT,GAAc,MAArB;AACAJ,IAAAA,GAAG,IAAII,IAAP;AACAA,IAAAA,IAAI,GAAIA,IAAI,IAAI,CAAT,GAAc,MAArB;AACAJ,IAAAA,GAAG,IAAII,IAAP;AACD;;AAED,SAAOJ,GAAP;AACD,CApB4B,CAA7B;AAsBA,eAAeJ,WAAf","sourcesContent":["import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\nconst crc16xmodem = defineCrc('xmodem', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    let code = (crc >>> 8) & 0xff;\n\n    code ^= byte & 0xff;\n    code ^= code >>> 4;\n    crc = (crc << 8) & 0xffff;\n    crc ^= code;\n    code = (code << 5) & 0xffff;\n    crc ^= code;\n    code = (code << 7) & 0xffff;\n    crc ^= code;\n  }\n\n  return crc;\n});\n\nexport default crc16xmodem;\n"]},"metadata":{},"sourceType":"module"}