{"ast":null,"code":"var msg = require('pako/lib/zlib/messages');\n\nvar zstream = require('pako/lib/zlib/zstream');\n\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\n\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\n\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n} // zlib modes\n\n\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\n\nfunction Zlib(mode) {\n  if (mode < exports.DEFLATE || mode > exports.UNZIP) throw new TypeError(\"Bad argument\");\n  this.mode = mode;\n  this.init_done = false;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.windowBits = 0;\n  this.level = 0;\n  this.memLevel = 0;\n  this.strategy = 0;\n  this.dictionary = null;\n}\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  this.windowBits = windowBits;\n  this.level = level;\n  this.memLevel = memLevel;\n  this.strategy = strategy; // dictionary not supported.\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) this.windowBits += 16;\n  if (this.mode === exports.UNZIP) this.windowBits += 32;\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) this.windowBits = -this.windowBits;\n  this.strm = new zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      var status = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n\n  if (status !== exports.Z_OK) {\n    this._error(status);\n\n    return;\n  }\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype.params = function () {\n  throw new Error(\"deflateParams Not supported\");\n};\n\nZlib.prototype._writeCheck = function () {\n  if (!this.init_done) throw new Error(\"write before init\");\n  if (this.mode === exports.NONE) throw new Error(\"already finalized\");\n  if (this.write_in_progress) throw new Error(\"write already in progress\");\n  if (this.pending_close) throw new Error(\"close is pending\");\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n\n  this.write_in_progress = true;\n  var self = this;\n  process.nextTick(function () {\n    self.write_in_progress = false;\n\n    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);\n\n    self.callback(res[0], res[1]);\n    if (self.pending_close) self.close();\n  });\n  return this;\n}; // set method for Node buffers, used by pako\n\n\nfunction bufferSet(data, offset) {\n  for (var i = 0; i < data.length; i++) {\n    this[offset + i] = data[i];\n  }\n}\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n\n  return this._write(flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error(\"Invalid flush value\");\n  }\n\n  if (input == null) {\n    input = new Buffer(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  if (out._set) out.set = out._set;else out.set = bufferSet;\n  var strm = this.strm;\n  strm.avail_in = in_len;\n  strm.input = input;\n  strm.next_in = in_off;\n  strm.avail_out = out_len;\n  strm.output = out;\n  strm.next_out = out_off;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflate(strm, flush);\n      break;\n\n    case exports.UNZIP:\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflate(strm, flush);\n      break;\n\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n\n  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {\n    this._error(status);\n  }\n\n  this.write_in_progress = false;\n  return [strm.avail_in, strm.avail_out];\n};\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n};\n\nZlib.prototype.reset = function () {\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateReset(this.strm);\n      break;\n\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflateReset(this.strm);\n      break;\n  }\n\n  if (status !== exports.Z_OK) {\n    this._error(status);\n  }\n};\n\nZlib.prototype._error = function (status) {\n  this.onerror(msg[status] + ': ' + this.strm.msg, status);\n  this.write_in_progress = false;\n  if (this.pending_close) this.close();\n};\n\nexports.Zlib = Zlib;","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/browserify/node_modules/browserify-zlib/src/binding.js"],"names":["msg","require","zstream","zlib_deflate","zlib_inflate","constants","key","exports","NONE","DEFLATE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","Zlib","mode","TypeError","init_done","write_in_progress","pending_close","windowBits","level","memLevel","strategy","dictionary","prototype","init","strm","status","deflateInit2","Z_DEFLATED","inflateInit2","Error","Z_OK","_error","params","_writeCheck","write","flush","input","in_off","in_len","out","out_off","out_len","self","process","nextTick","res","_write","callback","close","bufferSet","data","offset","i","length","writeSync","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Buffer","_set","set","avail_in","next_in","avail_out","output","next_out","deflate","inflate","Z_STREAM_END","deflateEnd","inflateEnd","reset","deflateReset","inflateReset","onerror"],"mappings":"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","sourcesContent":["var msg = require('pako/lib/zlib/messages');\nvar zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (mode < exports.DEFLATE || mode > exports.UNZIP)\n    throw new TypeError(\"Bad argument\");\n    \n  this.mode = mode;\n  this.init_done = false;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.windowBits = 0;\n  this.level = 0;\n  this.memLevel = 0;\n  this.strategy = 0;\n  this.dictionary = null;\n}\n\nZlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {\n  this.windowBits = windowBits;\n  this.level = level;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n  // dictionary not supported.\n  \n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)\n    this.windowBits += 16;\n    \n  if (this.mode === exports.UNZIP)\n    this.windowBits += 32;\n    \n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)\n    this.windowBits = -this.windowBits;\n    \n  this.strm = new zstream();\n  \n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateInit2(\n        this.strm,\n        this.level,\n        exports.Z_DEFLATED,\n        this.windowBits,\n        this.memLevel,\n        this.strategy\n      );\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      var status  = zlib_inflate.inflateInit2(\n        this.strm,\n        this.windowBits\n      );\n      break;\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n  \n  if (status !== exports.Z_OK) {\n    this._error(status);\n    return;\n  }\n  \n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype.params = function() {\n  throw new Error(\"deflateParams Not supported\");\n};\n\nZlib.prototype._writeCheck = function() {\n  if (!this.init_done)\n    throw new Error(\"write before init\");\n    \n  if (this.mode === exports.NONE)\n    throw new Error(\"already finalized\");\n    \n  if (this.write_in_progress)\n    throw new Error(\"write already in progress\");\n    \n  if (this.pending_close)\n    throw new Error(\"close is pending\");\n};\n\nZlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {    \n  this._writeCheck();\n  this.write_in_progress = true;\n  \n  var self = this;\n  process.nextTick(function() {\n    self.write_in_progress = false;\n    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);\n    self.callback(res[0], res[1]);\n    \n    if (self.pending_close)\n      self.close();\n  });\n  \n  return this;\n};\n\n// set method for Node buffers, used by pako\nfunction bufferSet(data, offset) {\n  for (var i = 0; i < data.length; i++) {\n    this[offset + i] = data[i];\n  }\n}\n\nZlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n  return this._write(flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this.write_in_progress = true;\n  \n  if (flush !== exports.Z_NO_FLUSH &&\n      flush !== exports.Z_PARTIAL_FLUSH &&\n      flush !== exports.Z_SYNC_FLUSH &&\n      flush !== exports.Z_FULL_FLUSH &&\n      flush !== exports.Z_FINISH &&\n      flush !== exports.Z_BLOCK) {\n    throw new Error(\"Invalid flush value\");\n  }\n  \n  if (input == null) {\n    input = new Buffer(0);\n    in_len = 0;\n    in_off = 0;\n  }\n  \n  if (out._set)\n    out.set = out._set;\n  else\n    out.set = bufferSet;\n  \n  var strm = this.strm;\n  strm.avail_in = in_len;\n  strm.input = input;\n  strm.next_in = in_off;\n  strm.avail_out = out_len;\n  strm.output = out;\n  strm.next_out = out_off;\n  \n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflate(strm, flush);\n      break;\n    case exports.UNZIP:\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflate(strm, flush);\n      break;\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n  \n  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {\n    this._error(status);\n  }\n  \n  this.write_in_progress = false;\n  return [strm.avail_in, strm.avail_out];\n};\n\nZlib.prototype.close = function() {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n  \n  this.pending_close = false;\n  \n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n  \n  this.mode = exports.NONE;\n};\n\nZlib.prototype.reset = function() {\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflateReset(this.strm);\n      break;\n  }\n  \n  if (status !== exports.Z_OK) {\n    this._error(status);\n  }\n};\n\nZlib.prototype._error = function(status) {\n  this.onerror(msg[status] + ': ' + this.strm.msg, status);\n  \n  this.write_in_progress = false;\n  if (this.pending_close)\n    this.close();\n};\n\nexports.Zlib = Zlib;\n"]},"metadata":{},"sourceType":"script"}