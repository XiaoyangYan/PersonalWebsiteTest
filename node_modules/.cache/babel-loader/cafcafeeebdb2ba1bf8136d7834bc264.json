{"ast":null,"code":"var SMConsumer = require('source-map').SourceMapConsumer;\n/**\n * @name mappingsFromMap\n * @function\n * @param map {Object} the JSON.parse()'ed map\n * @return {Array} array of mappings\n */\n\n\nmodule.exports = function (map) {\n  var consumer = new SMConsumer(map);\n  var mappings = [];\n  consumer.eachMapping(function (mapping) {\n    // only set source if we have original position to handle edgecase (see inline-source-map tests)\n    mappings.push({\n      original: mapping.originalColumn != null ? {\n        column: mapping.originalColumn,\n        line: mapping.originalLine\n      } : undefined,\n      generated: {\n        column: mapping.generatedColumn,\n        line: mapping.generatedLine\n      },\n      source: mapping.originalColumn != null ? mapping.source : undefined,\n      name: mapping.name\n    });\n  });\n  return mappings;\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/combine-source-map/lib/mappings-from-map.js"],"names":["SMConsumer","require","SourceMapConsumer","module","exports","map","consumer","mappings","eachMapping","mapping","push","original","originalColumn","column","line","originalLine","undefined","generated","generatedColumn","generatedLine","source","name"],"mappings":"AAAA,IAAIA,UAAU,GAAKC,OAAO,CAAC,YAAD,CAAP,CAAsBC,iBAAzC;AAEA;;;;;;;;AAMAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC9B,MAAIC,QAAQ,GAAG,IAAIN,UAAJ,CAAeK,GAAf,CAAf;AACA,MAAIE,QAAQ,GAAG,EAAf;AAEAD,EAAAA,QAAQ,CAACE,WAAT,CAAqB,UAAUC,OAAV,EAAmB;AACtC;AACAF,IAAAA,QAAQ,CAACG,IAAT,CAAc;AACZC,MAAAA,QAAQ,EAAEF,OAAO,CAACG,cAAR,IAA0B,IAA1B,GAAiC;AACzCC,QAAAA,MAAM,EAAEJ,OAAO,CAACG,cADyB;AAEzCE,QAAAA,IAAI,EAAEL,OAAO,CAACM;AAF2B,OAAjC,GAGNC,SAJQ;AAKZC,MAAAA,SAAS,EAAE;AACTJ,QAAAA,MAAM,EAAEJ,OAAO,CAACS,eADP;AAETJ,QAAAA,IAAI,EAAEL,OAAO,CAACU;AAFL,OALC;AASZC,MAAAA,MAAM,EAAEX,OAAO,CAACG,cAAR,IAA0B,IAA1B,GAAiCH,OAAO,CAACW,MAAzC,GAAkDJ,SAT9C;AAUZK,MAAAA,IAAI,EAAEZ,OAAO,CAACY;AAVF,KAAd;AAYD,GAdD;AAgBA,SAAOd,QAAP;AACD,CArBD","sourcesContent":["var SMConsumer  =  require('source-map').SourceMapConsumer;\n\n/**\n * @name mappingsFromMap\n * @function\n * @param map {Object} the JSON.parse()'ed map\n * @return {Array} array of mappings\n */\nmodule.exports = function (map) {\n  var consumer = new SMConsumer(map);\n  var mappings = [];\n\n  consumer.eachMapping(function (mapping) {\n    // only set source if we have original position to handle edgecase (see inline-source-map tests)\n    mappings.push({\n      original: mapping.originalColumn != null ? {\n        column: mapping.originalColumn\n      , line: mapping.originalLine\n      } : undefined\n    , generated: {\n        column: mapping.generatedColumn\n      , line: mapping.generatedLine\n      }\n    , source: mapping.originalColumn != null ? mapping.source : undefined\n    , name: mapping.name\n    });\n  });\n\n  return mappings;\n}\n"]},"metadata":{},"sourceType":"script"}