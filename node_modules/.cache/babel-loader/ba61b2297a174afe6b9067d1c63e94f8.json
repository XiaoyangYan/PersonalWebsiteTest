{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar isglob = require('is-glob');\n\nvar pathDirname = require('path-dirname');\n\nvar isWin32 = require('os').platform() === 'win32';\n\nmodule.exports = function globParent(str) {\n  // flip windows path separators\n  if (isWin32 && str.indexOf('/') < 0) str = str.split('\\\\').join('/'); // special case for strings ending in enclosure containing path separator\n\n  if (/[\\{\\[].*[\\/]*.*[\\}\\]]$/.test(str)) str += '/'; // preserves full path in case of trailing path separator\n\n  str += 'a'; // remove path parts that are globby\n\n  do {\n    str = pathDirname.posix(str);\n  } while (isglob(str) || /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/.test(str)); // remove escape chars and return result\n\n\n  return str.replace(/\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g, '$1');\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/chokidar/node_modules/glob-parent/index.js"],"names":["path","require","isglob","pathDirname","isWin32","platform","module","exports","globParent","str","indexOf","split","join","test","posix","replace"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,IAAD,CAAP,CAAcI,QAAd,OAA6B,OAA3C;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACzC;AACA,MAAIL,OAAO,IAAIK,GAAG,CAACC,OAAJ,CAAY,GAAZ,IAAmB,CAAlC,EAAqCD,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,IAAhB,CAAqB,GAArB,CAAN,CAFI,CAIzC;;AACA,MAAI,yBAAyBC,IAAzB,CAA8BJ,GAA9B,CAAJ,EAAwCA,GAAG,IAAI,GAAP,CALC,CAOzC;;AACAA,EAAAA,GAAG,IAAI,GAAP,CARyC,CAUzC;;AACA,KAAG;AAACA,IAAAA,GAAG,GAAGN,WAAW,CAACW,KAAZ,CAAkBL,GAAlB,CAAN;AAA6B,GAAjC,QACOP,MAAM,CAACO,GAAD,CAAN,IAAe,8BAA8BI,IAA9B,CAAmCJ,GAAnC,CADtB,EAXyC,CAczC;;;AACA,SAAOA,GAAG,CAACM,OAAJ,CAAY,2BAAZ,EAAyC,IAAzC,CAAP;AACA,CAhBD","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar isglob = require('is-glob');\nvar pathDirname = require('path-dirname');\nvar isWin32 = require('os').platform() === 'win32';\n\nmodule.exports = function globParent(str) {\n\t// flip windows path separators\n\tif (isWin32 && str.indexOf('/') < 0) str = str.split('\\\\').join('/');\n\n\t// special case for strings ending in enclosure containing path separator\n\tif (/[\\{\\[].*[\\/]*.*[\\}\\]]$/.test(str)) str += '/';\n\n\t// preserves full path in case of trailing path separator\n\tstr += 'a';\n\n\t// remove path parts that are globby\n\tdo {str = pathDirname.posix(str)}\n\twhile (isglob(str) || /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/.test(str));\n\n\t// remove escape chars and return result\n\treturn str.replace(/\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g, '$1');\n};\n"]},"metadata":{},"sourceType":"script"}