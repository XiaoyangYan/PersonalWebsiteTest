{"ast":null,"code":"/**\n* upath http://github.com/anodynos/upath/\n*\n* A proxy to `path`, replacing `\\` with `/` for all results & new methods to normalize & join keeping leading `./` and add, change, default, trim file extensions.\n* Version 1.2.0 - Compiled on 2019-09-02 23:33:57\n* Repository git://github.com/anodynos/upath\n* Copyright(c) 2019 Angelos Pikoulas <agelos.pikoulas@gmail.com>\n* License MIT\n*/\n// Generated by uRequire v0.7.0-beta.33 target: 'lib' template: 'nodejs'\nvar VERSION = '1.2.0'; // injected by urequire-rc-inject-version\n\nvar extraFn,\n    extraFunctions,\n    isFunction,\n    isString,\n    isValidExt,\n    name,\n    path,\n    propName,\n    propValue,\n    toUnix,\n    upath,\n    slice = [].slice,\n    indexOf = [].indexOf || function (item) {\n  for (var i = 0, l = this.length; i < l; i++) {\n    if (i in this && this[i] === item) return i;\n  }\n\n  return -1;\n},\n    hasProp = {}.hasOwnProperty;\n\npath = require(\"path\");\n\nisFunction = function (val) {\n  return val instanceof Function;\n};\n\nisString = function (val) {\n  return typeof val === \"string\" || !!val && typeof val === \"object\" && Object.prototype.toString.call(val) === \"[object String]\";\n};\n\nupath = exports;\nupath.VERSION = typeof VERSION !== \"undefined\" && VERSION !== null ? VERSION : \"NO-VERSION\";\n\ntoUnix = function (p) {\n  var double;\n  p = p.replace(/\\\\/g, \"/\");\n  double = /\\/\\//;\n\n  while (p.match(double)) {\n    p = p.replace(double, \"/\");\n  }\n\n  return p;\n};\n\nfor (propName in path) {\n  propValue = path[propName];\n\n  if (isFunction(propValue)) {\n    upath[propName] = function (propName) {\n      return function () {\n        var args, result;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        args = args.map(function (p) {\n          if (isString(p)) {\n            return toUnix(p);\n          } else {\n            return p;\n          }\n        });\n        result = path[propName].apply(path, args);\n\n        if (isString(result)) {\n          return toUnix(result);\n        } else {\n          return result;\n        }\n      };\n    }(propName);\n  } else {\n    upath[propName] = propValue;\n  }\n}\n\nupath.sep = \"/\";\nextraFunctions = {\n  toUnix: toUnix,\n  normalizeSafe: function (p) {\n    p = toUnix(p);\n\n    if (p.startsWith(\"./\")) {\n      if (p.startsWith(\"./..\") || p === \"./\") {\n        return upath.normalize(p);\n      } else {\n        return \"./\" + upath.normalize(p);\n      }\n    } else {\n      return upath.normalize(p);\n    }\n  },\n  normalizeTrim: function (p) {\n    p = upath.normalizeSafe(p);\n\n    if (p.endsWith(\"/\")) {\n      return p.slice(0, +(p.length - 2) + 1 || 9000000000);\n    } else {\n      return p;\n    }\n  },\n  joinSafe: function () {\n    var p, result;\n    p = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    result = upath.join.apply(null, p);\n\n    if (p[0].startsWith(\"./\") && !result.startsWith(\"./\")) {\n      result = \"./\" + result;\n    }\n\n    return result;\n  },\n  addExt: function (file, ext) {\n    if (!ext) {\n      return file;\n    } else {\n      if (ext[0] !== \".\") {\n        ext = \".\" + ext;\n      }\n\n      return file + (file.endsWith(ext) ? \"\" : ext);\n    }\n  },\n  trimExt: function (filename, ignoreExts, maxSize) {\n    var oldExt;\n\n    if (maxSize == null) {\n      maxSize = 7;\n    }\n\n    oldExt = upath.extname(filename);\n\n    if (isValidExt(oldExt, ignoreExts, maxSize)) {\n      return filename.slice(0, +(filename.length - oldExt.length - 1) + 1 || 9000000000);\n    } else {\n      return filename;\n    }\n  },\n  removeExt: function (filename, ext) {\n    if (!ext) {\n      return filename;\n    } else {\n      ext = ext[0] === \".\" ? ext : \".\" + ext;\n\n      if (upath.extname(filename) === ext) {\n        return upath.trimExt(filename);\n      } else {\n        return filename;\n      }\n    }\n  },\n  changeExt: function (filename, ext, ignoreExts, maxSize) {\n    if (maxSize == null) {\n      maxSize = 7;\n    }\n\n    return upath.trimExt(filename, ignoreExts, maxSize) + (!ext ? \"\" : ext[0] === \".\" ? ext : \".\" + ext);\n  },\n  defaultExt: function (filename, ext, ignoreExts, maxSize) {\n    var oldExt;\n\n    if (maxSize == null) {\n      maxSize = 7;\n    }\n\n    oldExt = upath.extname(filename);\n\n    if (isValidExt(oldExt, ignoreExts, maxSize)) {\n      return filename;\n    } else {\n      return upath.addExt(filename, ext);\n    }\n  }\n};\n\nisValidExt = function (ext, ignoreExts, maxSize) {\n  if (ignoreExts == null) {\n    ignoreExts = [];\n  }\n\n  return ext && ext.length <= maxSize && indexOf.call(ignoreExts.map(function (e) {\n    return (e && e[0] !== \".\" ? \".\" : \"\") + e;\n  }), ext) < 0;\n};\n\nfor (name in extraFunctions) {\n  if (!hasProp.call(extraFunctions, name)) continue;\n  extraFn = extraFunctions[name];\n\n  if (upath[name] !== void 0) {\n    throw new Error(\"path.\" + name + \" already exists.\");\n  } else {\n    upath[name] = extraFn;\n  }\n}\n\n;","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/upath/build/code/upath.js"],"names":["VERSION","extraFn","extraFunctions","isFunction","isString","isValidExt","name","path","propName","propValue","toUnix","upath","slice","indexOf","item","i","l","length","hasProp","hasOwnProperty","require","val","Function","Object","prototype","toString","call","exports","p","double","replace","match","args","result","arguments","map","apply","sep","normalizeSafe","startsWith","normalize","normalizeTrim","endsWith","joinSafe","join","addExt","file","ext","trimExt","filename","ignoreExts","maxSize","oldExt","extname","removeExt","changeExt","defaultExt","e","Error"],"mappings":"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","sourcesContent":["/**\n* upath http://github.com/anodynos/upath/\n*\n* A proxy to `path`, replacing `\\` with `/` for all results & new methods to normalize & join keeping leading `./` and add, change, default, trim file extensions.\n* Version 1.2.0 - Compiled on 2019-09-02 23:33:57\n* Repository git://github.com/anodynos/upath\n* Copyright(c) 2019 Angelos Pikoulas <agelos.pikoulas@gmail.com>\n* License MIT\n*/\n\n// Generated by uRequire v0.7.0-beta.33 target: 'lib' template: 'nodejs'\n\n\nvar VERSION = '1.2.0'; // injected by urequire-rc-inject-version\n\nvar extraFn, extraFunctions, isFunction, isString, isValidExt, name, path, propName, propValue, toUnix, upath, slice = [].slice, indexOf = [].indexOf || function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (i in this && this[i] === item)\n        return i;\n    }\n    return -1;\n  }, hasProp = {}.hasOwnProperty;\npath = require(\"path\");\nisFunction = function (val) {\n  return val instanceof Function;\n};\nisString = function (val) {\n  return typeof val === \"string\" || !!val && typeof val === \"object\" && Object.prototype.toString.call(val) === \"[object String]\";\n};\nupath = exports;\nupath.VERSION = typeof VERSION !== \"undefined\" && VERSION !== null ? VERSION : \"NO-VERSION\";\ntoUnix = function (p) {\n  var double;\n  p = p.replace(/\\\\/g, \"/\");\n  double = /\\/\\//;\n  while (p.match(double)) {\n    p = p.replace(double, \"/\");\n  }\n  return p;\n};\nfor (propName in path) {\n  propValue = path[propName];\n  if (isFunction(propValue)) {\n    upath[propName] = function (propName) {\n      return function () {\n        var args, result;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        args = args.map(function (p) {\n          if (isString(p)) {\n            return toUnix(p);\n          } else {\n            return p;\n          }\n        });\n        result = path[propName].apply(path, args);\n        if (isString(result)) {\n          return toUnix(result);\n        } else {\n          return result;\n        }\n      };\n    }(propName);\n  } else {\n    upath[propName] = propValue;\n  }\n}\nupath.sep = \"/\";\nextraFunctions = {\n  toUnix: toUnix,\n  normalizeSafe: function (p) {\n    p = toUnix(p);\n    if (p.startsWith(\"./\")) {\n      if (p.startsWith(\"./..\") || p === \"./\") {\n        return upath.normalize(p);\n      } else {\n        return \"./\" + upath.normalize(p);\n      }\n    } else {\n      return upath.normalize(p);\n    }\n  },\n  normalizeTrim: function (p) {\n    p = upath.normalizeSafe(p);\n    if (p.endsWith(\"/\")) {\n      return p.slice(0, +(p.length - 2) + 1 || 9000000000);\n    } else {\n      return p;\n    }\n  },\n  joinSafe: function () {\n    var p, result;\n    p = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    result = upath.join.apply(null, p);\n    if (p[0].startsWith(\"./\") && !result.startsWith(\"./\")) {\n      result = \"./\" + result;\n    }\n    return result;\n  },\n  addExt: function (file, ext) {\n    if (!ext) {\n      return file;\n    } else {\n      if (ext[0] !== \".\") {\n        ext = \".\" + ext;\n      }\n      return file + (file.endsWith(ext) ? \"\" : ext);\n    }\n  },\n  trimExt: function (filename, ignoreExts, maxSize) {\n    var oldExt;\n    if (maxSize == null) {\n      maxSize = 7;\n    }\n    oldExt = upath.extname(filename);\n    if (isValidExt(oldExt, ignoreExts, maxSize)) {\n      return filename.slice(0, +(filename.length - oldExt.length - 1) + 1 || 9000000000);\n    } else {\n      return filename;\n    }\n  },\n  removeExt: function (filename, ext) {\n    if (!ext) {\n      return filename;\n    } else {\n      ext = ext[0] === \".\" ? ext : \".\" + ext;\n      if (upath.extname(filename) === ext) {\n        return upath.trimExt(filename);\n      } else {\n        return filename;\n      }\n    }\n  },\n  changeExt: function (filename, ext, ignoreExts, maxSize) {\n    if (maxSize == null) {\n      maxSize = 7;\n    }\n    return upath.trimExt(filename, ignoreExts, maxSize) + (!ext ? \"\" : ext[0] === \".\" ? ext : \".\" + ext);\n  },\n  defaultExt: function (filename, ext, ignoreExts, maxSize) {\n    var oldExt;\n    if (maxSize == null) {\n      maxSize = 7;\n    }\n    oldExt = upath.extname(filename);\n    if (isValidExt(oldExt, ignoreExts, maxSize)) {\n      return filename;\n    } else {\n      return upath.addExt(filename, ext);\n    }\n  }\n};\nisValidExt = function (ext, ignoreExts, maxSize) {\n  if (ignoreExts == null) {\n    ignoreExts = [];\n  }\n  return ext && ext.length <= maxSize && indexOf.call(ignoreExts.map(function (e) {\n    return (e && e[0] !== \".\" ? \".\" : \"\") + e;\n  }), ext) < 0;\n};\nfor (name in extraFunctions) {\n  if (!hasProp.call(extraFunctions, name))\n    continue;\n  extraFn = extraFunctions[name];\n  if (upath[name] !== void 0) {\n    throw new Error(\"path.\" + name + \" already exists.\");\n  } else {\n    upath[name] = extraFn;\n  }\n}\n\n;"]},"metadata":{},"sourceType":"script"}