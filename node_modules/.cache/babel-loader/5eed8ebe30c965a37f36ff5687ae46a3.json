{"ast":null,"code":"import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc'; // Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\n// prettier-ignore\n\nlet TABLE = [0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d];\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\nconst crc32 = defineCrc('crc-32', function (buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n  let crc = previous === 0 ? 0 : ~~previous ^ -1;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;\n  }\n\n  return crc ^ -1;\n});\nexport default crc32;","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/crc/crc32.js"],"names":["Buffer","createBuffer","defineCrc","TABLE","Int32Array","crc32","buf","previous","isBuffer","crc","index","length","byte"],"mappings":"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","sourcesContent":["import { Buffer } from 'buffer';\nimport createBuffer from './create_buffer';\nimport defineCrc from './define_crc';\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\n// prettier-ignore\nlet TABLE = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba,\n  0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n  0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec,\n  0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940,\n  0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116,\n  0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a,\n  0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818,\n  0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c,\n  0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n  0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086,\n  0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4,\n  0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n  0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe,\n  0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252,\n  0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60,\n  0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04,\n  0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a,\n  0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e,\n  0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n  0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0,\n  0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6,\n  0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nconst crc32 = defineCrc('crc-32', function(buf, previous) {\n  if (!Buffer.isBuffer(buf)) buf = createBuffer(buf);\n\n  let crc = previous === 0 ? 0 : ~~previous ^ -1;\n\n  for (let index = 0; index < buf.length; index++) {\n    const byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n  }\n\n  return crc ^ -1;\n});\n\nexport default crc32;\n"]},"metadata":{},"sourceType":"module"}