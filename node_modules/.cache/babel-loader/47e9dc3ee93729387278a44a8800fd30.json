{"ast":null,"code":"var Splicer = require('stream-splicer');\n\nvar inherits = require('inherits');\n\nmodule.exports = Labeled;\ninherits(Labeled, Splicer);\n\nmodule.exports.obj = function (streams, opts) {\n  if (!opts) opts = {};\n  opts.objectMode = true;\n  return new Labeled(streams, opts);\n};\n\nfunction Labeled(streams, opts) {\n  if (!(this instanceof Labeled)) return new Labeled(streams, opts);\n  Splicer.call(this, [], opts);\n  var reps = [];\n\n  for (var i = 0; i < streams.length; i++) {\n    var s = streams[i];\n    if (typeof s === 'string') continue;\n\n    if (Array.isArray(s)) {\n      s = new Labeled(s, opts);\n    }\n\n    if (i >= 0 && typeof streams[i - 1] === 'string') {\n      s.label = streams[i - 1];\n    }\n\n    reps.push(s);\n  }\n\n  if (typeof streams[i - 1] === 'string') {\n    reps.push(new Labeled([], opts));\n  }\n\n  this.splice.apply(this, [0, 0].concat(reps));\n}\n\nLabeled.prototype.indexOf = function (stream) {\n  if (typeof stream === 'string') {\n    for (var i = 0; i < this._streams.length; i++) {\n      if (this._streams[i].label === stream) return i;\n    }\n\n    return -1;\n  } else {\n    return Splicer.prototype.indexOf.call(this, stream);\n  }\n};\n\nLabeled.prototype.get = function (key) {\n  if (typeof key === 'string') {\n    var ix = this.indexOf(key);\n    if (ix < 0) return undefined;\n    return this._streams[ix];\n  } else return Splicer.prototype.get.call(this, key);\n};\n\nLabeled.prototype.splice = function (key) {\n  var ix;\n\n  if (typeof key === 'string') {\n    ix = this.indexOf(key);\n  } else ix = key;\n\n  var args = [ix].concat([].slice.call(arguments, 1));\n  return Splicer.prototype.splice.apply(this, args);\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/labeled-stream-splicer/index.js"],"names":["Splicer","require","inherits","module","exports","Labeled","obj","streams","opts","objectMode","call","reps","i","length","s","Array","isArray","label","push","splice","apply","concat","prototype","indexOf","stream","_streams","get","key","ix","undefined","args","slice","arguments"],"mappings":"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","sourcesContent":["var Splicer = require('stream-splicer');\nvar inherits = require('inherits');\n\nmodule.exports = Labeled;\ninherits(Labeled, Splicer);\n\nmodule.exports.obj = function (streams, opts) {\n    if (!opts) opts = {};\n    opts.objectMode = true;\n    return new Labeled(streams, opts);\n};\n\nfunction Labeled (streams, opts) {\n    if (!(this instanceof Labeled)) return new Labeled(streams, opts);\n    Splicer.call(this, [], opts);\n    \n    var reps = [];\n    for (var i = 0; i < streams.length; i++) {\n        var s = streams[i];\n        if (typeof s === 'string') continue;\n        if (Array.isArray(s)) {\n            s = new Labeled(s, opts);\n        }\n        if (i >= 0 && typeof streams[i-1] === 'string') {\n            s.label = streams[i-1];\n        }\n        reps.push(s);\n    }\n    if (typeof streams[i-1] === 'string') {\n        reps.push(new Labeled([], opts));\n    }\n    this.splice.apply(this, [0,0].concat(reps));\n}\n\nLabeled.prototype.indexOf = function (stream) {\n    if (typeof stream === 'string') {\n        for (var i = 0; i < this._streams.length; i++) {\n            if (this._streams[i].label === stream) return i;\n        }\n        return -1;\n    }\n    else {\n        return Splicer.prototype.indexOf.call(this, stream);\n    }\n};\n\nLabeled.prototype.get = function (key) {\n    if (typeof key === 'string') {\n        var ix = this.indexOf(key);\n        if (ix < 0) return undefined;\n        return this._streams[ix];\n    }\n    else return Splicer.prototype.get.call(this, key);\n};\n\nLabeled.prototype.splice = function (key) {\n    var ix;\n    if (typeof key === 'string') {\n        ix = this.indexOf(key);\n    }\n    else ix = key;\n    var args = [ ix ].concat([].slice.call(arguments, 1));\n    return Splicer.prototype.splice.apply(this, args);\n};\n"]},"metadata":{},"sourceType":"script"}