{"ast":null,"code":"/* Generated by `npm run build`, do not edit! */\n\"use strict\";\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar acorn = require(\"acorn\");\n\nvar tt = acorn.tokTypes;\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue;\n    this._inStaticFieldValue = true;\n    field.value = this.parseExpression();\n    this._inStaticFieldValue = oldInFieldValue;\n  } else {\n    field.value = null;\n  }\n}\n\nvar privateClassElements = require(\"../private-class-elements\");\n\nmodule.exports = function (Parser) {\n  var ExtendedParser = privateClassElements(Parser);\n  return (\n    /*@__PURE__*/\n    function (ExtendedParser) {\n      function anonymous() {\n        ExtendedParser.apply(this, arguments);\n      }\n\n      if (ExtendedParser) anonymous.__proto__ = ExtendedParser;\n      anonymous.prototype = Object.create(ExtendedParser && ExtendedParser.prototype);\n      anonymous.prototype.constructor = anonymous;\n\n      anonymous.prototype.parseClassElement = function parseClassElement(_constructorAllowsSuper) {\n        var this$1 = this;\n\n        if (this.eat(tt.semi)) {\n          return null;\n        }\n\n        var node = this.startNode();\n\n        var tryContextual = function (k, noLineBreak) {\n          if (typeof noLineBreak == \"undefined\") {\n            noLineBreak = false;\n          }\n\n          var start = this$1.start,\n              startLoc = this$1.startLoc;\n\n          if (!this$1.eatContextual(k)) {\n            return false;\n          }\n\n          if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n            return true;\n          }\n\n          if (node.key) {\n            this$1.unexpected();\n          }\n\n          node.computed = false;\n          node.key = this$1.startNodeAt(start, startLoc);\n          node.key.name = k;\n          this$1.finishNode(node.key, \"Identifier\");\n          return false;\n        };\n\n        node.static = tryContextual(\"static\");\n\n        if (!node.static) {\n          return ExtendedParser.prototype.parseClassElement.apply(this, arguments);\n        }\n\n        var isGenerator = this.eat(tt.star);\n        var isAsync = false;\n\n        if (!isGenerator) {\n          // Special-case for `async`, since `parseClassMember` currently looks\n          // for `(` to determine whether `async` is a method name\n          if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n            skipWhiteSpace.lastIndex = this.pos;\n            var skip = skipWhiteSpace.exec(this.input);\n            var next = this.input.charAt(this.pos + skip[0].length);\n\n            if (next === \";\" || next === \"=\") {\n              node.key = this.parseIdent(true);\n              node.computed = false;\n              maybeParseFieldValue.call(this, node);\n              this.finishNode(node, \"FieldDefinition\");\n              this.semicolon();\n              return node;\n            } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n              isAsync = true;\n              isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star);\n            }\n          } else if (tryContextual(\"get\")) {\n            node.kind = \"get\";\n          } else if (tryContextual(\"set\")) {\n            node.kind = \"set\";\n          }\n        }\n\n        if (this.type === this.privateNameToken) {\n          this.parsePrivateClassElementName(node);\n\n          if (this.type !== tt.parenL) {\n            if (node.key.name === \"prototype\") {\n              this.raise(node.key.start, \"Classes may not have a private static property named prototype\");\n            }\n\n            maybeParseFieldValue.call(this, node);\n            this.finishNode(node, \"FieldDefinition\");\n            this.semicolon();\n            return node;\n          }\n        } else if (!node.key) {\n          this.parsePropertyName(node);\n\n          if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n            this.raise(node.key.start, \"Classes may not have a static property named prototype\");\n          }\n        }\n\n        if (!node.kind) {\n          node.kind = \"method\";\n        }\n\n        this.parseClassMethod(node, isGenerator, isAsync);\n\n        if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static field named constructor\");\n        }\n\n        if (node.kind === \"get\" && node.value.params.length !== 0) {\n          this.raiseRecoverable(node.value.start, \"getter should have no params\");\n        }\n\n        if (node.kind === \"set\" && node.value.params.length !== 1) {\n          this.raiseRecoverable(node.value.start, \"setter should have exactly one param\");\n        }\n\n        if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n          this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\");\n        }\n\n        return node;\n      }; // Parse public static fields\n\n\n      anonymous.prototype.parseClassMethod = function parseClassMethod(method, isGenerator, isAsync, _allowsDirectSuper) {\n        if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n          return ExtendedParser.prototype.parseClassMethod.apply(this, arguments);\n        }\n\n        maybeParseFieldValue.call(this, method);\n        delete method.kind;\n        method = this.finishNode(method, \"FieldDefinition\");\n        this.semicolon();\n        return method;\n      }; // Prohibit arguments in class field initializers\n\n\n      anonymous.prototype.parseIdent = function parseIdent(liberal, isBinding) {\n        var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding);\n\n        if (this._inStaticFieldValue && ident.name == \"arguments\") {\n          this.raise(ident.start, \"A static class field initializer may not contain arguments\");\n        }\n\n        return ident;\n      };\n\n      return anonymous;\n    }(ExtendedParser)\n  );\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/acorn-node/lib/static-class-features/index.js"],"names":["skipWhiteSpace","acorn","require","tt","tokTypes","maybeParseFieldValue","field","eat","eq","oldInFieldValue","_inStaticFieldValue","value","parseExpression","privateClassElements","module","exports","Parser","ExtendedParser","anonymous","apply","arguments","__proto__","prototype","Object","create","constructor","parseClassElement","_constructorAllowsSuper","this$1","semi","node","startNode","tryContextual","k","noLineBreak","start","startLoc","eatContextual","type","parenL","canInsertSemicolon","key","unexpected","computed","startNodeAt","name","finishNode","static","isGenerator","star","isAsync","options","ecmaVersion","isContextual","lastIndex","pos","skip","exec","input","next","charAt","length","parseIdent","call","semicolon","kind","privateNameToken","parsePrivateClassElementName","raise","parsePropertyName","parseClassMethod","params","raiseRecoverable","method","_allowsDirectSuper","liberal","isBinding","ident"],"mappings":"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","sourcesContent":["/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue\n    this._inStaticFieldValue = true\n    field.value = this.parseExpression()\n    this._inStaticFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nvar privateClassElements = require(\"../private-class-elements\")\n\nmodule.exports = function(Parser) {\n  var ExtendedParser = privateClassElements(Parser)\n\n  return /*@__PURE__*/(function (ExtendedParser) {\n    function anonymous () {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if ( ExtendedParser ) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create( ExtendedParser && ExtendedParser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) { return null }\n\n      var node = this.startNode()\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") { noLineBreak = false }\n        var start = this$1.start, startLoc = this$1.startLoc\n        if (!this$1.eatContextual(k)) { return false }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n        if (node.key) { this$1.unexpected() }\n        node.computed = false\n        node.key = this$1.startNodeAt(start, startLoc)\n        node.key.name = k\n        this$1.finishNode(node.key, \"Identifier\")\n        return false\n      }\n\n      node.static = tryContextual(\"static\")\n      if (!node.static) { return ExtendedParser.prototype.parseClassElement.apply(this, arguments) }\n\n      var isGenerator = this.eat(tt.star)\n      var isAsync = false\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          var skip = skipWhiteSpace.exec(this.input)\n          var next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\"\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\"\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node)\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node)\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\")\n        }\n      }\n      if (!node.kind) { node.kind = \"method\" }\n      this.parseClassMethod(node, isGenerator, isAsync)\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\")\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\")\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\")\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\")\n      }\n\n      return node\n\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod (method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inStaticFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A static class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(ExtendedParser))\n}\n"]},"metadata":{},"sourceType":"script"}