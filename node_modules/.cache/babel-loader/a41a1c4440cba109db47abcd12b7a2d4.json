{"ast":null,"code":"var undeclaredIdentifiers = require('undeclared-identifiers');\n\nvar through = require('through2');\n\nvar merge = require('xtend');\n\nvar parse = require('acorn-node').parse;\n\nvar path = require('path');\n\nvar isAbsolute = path.isAbsolute || require('path-is-absolute');\n\nvar processPath = require.resolve('process/browser.js');\n\nvar isbufferPath = require.resolve('is-buffer');\n\nvar combineSourceMap = require('combine-source-map');\n\nfunction getRelativeRequirePath(fullPath, fromPath) {\n  var relpath = path.relative(path.dirname(fromPath), fullPath); // If fullPath is in the same directory or a subdirectory of fromPath,\n  // relpath will result in something like \"index.js\", \"src/abc.js\".\n  // require() needs \"./\" prepended to these paths.\n\n  if (!/^\\./.test(relpath) && !isAbsolute(relpath)) {\n    relpath = \"./\" + relpath;\n  } // On Windows: Convert path separators to what require() expects\n\n\n  if (path.sep === '\\\\') {\n    relpath = relpath.replace(/\\\\/g, '/');\n  }\n\n  return relpath;\n}\n\nvar defaultVars = {\n  process: function (file) {\n    var relpath = getRelativeRequirePath(processPath, file);\n    return 'require(' + JSON.stringify(relpath) + ')';\n  },\n  global: function () {\n    return 'typeof global !== \"undefined\" ? global : ' + 'typeof self !== \"undefined\" ? self : ' + 'typeof window !== \"undefined\" ? window : {}';\n  },\n  'Buffer.isBuffer': function (file) {\n    var relpath = getRelativeRequirePath(isbufferPath, file);\n    return 'require(' + JSON.stringify(relpath) + ')';\n  },\n  Buffer: function () {\n    return 'require(\"buffer\").Buffer';\n  },\n  setImmediate: function () {\n    return 'require(\"timers\").setImmediate';\n  },\n  clearImmediate: function () {\n    return 'require(\"timers\").clearImmediate';\n  },\n  __filename: function (file, basedir) {\n    var relpath = path.relative(basedir, file); // standardize path separators, use slash in Windows too\n\n    if (path.sep === '\\\\') {\n      relpath = relpath.replace(/\\\\/g, '/');\n    }\n\n    var filename = '/' + relpath;\n    return JSON.stringify(filename);\n  },\n  __dirname: function (file, basedir) {\n    var relpath = path.relative(basedir, file); // standardize path separators, use slash in Windows too\n\n    if (path.sep === '\\\\') {\n      relpath = relpath.replace(/\\\\/g, '/');\n    }\n\n    var dir = path.dirname('/' + relpath);\n    return JSON.stringify(dir);\n  }\n};\n\nmodule.exports = function (file, opts) {\n  if (/\\.json$/i.test(file)) return through();\n  if (!opts) opts = {};\n  var basedir = opts.basedir || '/';\n  var vars = merge(defaultVars, opts.vars);\n  var varNames = Object.keys(vars).filter(function (name) {\n    return typeof vars[name] === 'function';\n  });\n  var quick = RegExp(varNames.map(function (name) {\n    return '\\\\b' + name + '\\\\b';\n  }).join('|'));\n  var chunks = [];\n  return through(write, end);\n\n  function write(chunk, enc, next) {\n    chunks.push(chunk);\n    next();\n  }\n\n  function end() {\n    var self = this;\n    var source = Buffer.isBuffer(chunks[0]) ? Buffer.concat(chunks).toString('utf8') : chunks.join('');\n    source = source.replace(/^\\ufeff/, '').replace(/^#![^\\n]*\\n/, '\\n');\n\n    if (opts.always !== true && !quick.test(source)) {\n      this.push(source);\n      this.push(null);\n      return;\n    }\n\n    try {\n      var undeclared = opts.always ? {\n        identifiers: varNames,\n        properties: []\n      } : undeclaredIdentifiers(parse(source), {\n        wildcard: true\n      });\n    } catch (err) {\n      var e = new SyntaxError((err.message || err) + ' while parsing ' + file);\n      e.type = 'syntax';\n      e.filename = file;\n      return this.emit('error', e);\n    }\n\n    var globals = {};\n    varNames.forEach(function (name) {\n      if (!/\\./.test(name)) return;\n      var parts = name.split('.');\n      var prop = undeclared.properties.indexOf(name);\n      if (prop === -1 || countprops(undeclared.properties, parts[0]) > 1) return;\n      var value = vars[name](file, basedir);\n      if (!value) return;\n      globals[parts[0]] = '{' + JSON.stringify(parts[1]) + ':' + value + '}';\n      self.emit('global', name);\n    });\n    varNames.forEach(function (name) {\n      if (/\\./.test(name)) return;\n      if (globals[name]) return;\n      if (undeclared.identifiers.indexOf(name) < 0) return;\n      var value = vars[name](file, basedir);\n      if (!value) return;\n      globals[name] = value;\n      self.emit('global', name);\n    });\n    this.push(closeOver(globals, source, file, opts));\n    this.push(null);\n  }\n};\n\nmodule.exports.vars = defaultVars;\n\nfunction closeOver(globals, src, file, opts) {\n  var keys = Object.keys(globals);\n  if (keys.length === 0) return src;\n  var values = keys.map(function (key) {\n    return globals[key];\n  });\n  var wrappedSource;\n\n  if (keys.length <= 3) {\n    wrappedSource = '(function (' + keys.join(',') + '){\\n' + src + '\\n}).call(this,' + values.join(',') + ')';\n  } else {\n    // necessary to make arguments[3..6] still work for workerify etc\n    // a,b,c,arguments[3..6],d,e,f...\n    var extra = ['__argument0', '__argument1', '__argument2', '__argument3'];\n    var names = keys.slice(0, 3).concat(extra).concat(keys.slice(3));\n    values.splice(3, 0, 'arguments[3]', 'arguments[4]', 'arguments[5]', 'arguments[6]');\n    wrappedSource = '(function (' + names.join(',') + '){\\n' + src + '\\n}).call(this,' + values.join(',') + ')';\n  } // Generate source maps if wanted. Including the right offset for\n  // the wrapped source.\n\n\n  if (!opts.debug) {\n    return wrappedSource;\n  }\n\n  var sourceFile = path.relative(opts.basedir, file).replace(/\\\\/g, '/');\n  var sourceMap = combineSourceMap.create().addFile({\n    sourceFile: sourceFile,\n    source: src\n  }, {\n    line: 1\n  });\n  return combineSourceMap.removeComments(wrappedSource) + \"\\n\" + sourceMap.comment();\n}\n\nfunction countprops(props, name) {\n  return props.filter(function (prop) {\n    return prop.slice(0, name.length + 1) === name + '.';\n  }).length;\n}","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/insert-module-globals/index.js"],"names":["undeclaredIdentifiers","require","through","merge","parse","path","isAbsolute","processPath","resolve","isbufferPath","combineSourceMap","getRelativeRequirePath","fullPath","fromPath","relpath","relative","dirname","test","sep","replace","defaultVars","process","file","JSON","stringify","global","Buffer","setImmediate","clearImmediate","__filename","basedir","filename","__dirname","dir","module","exports","opts","vars","varNames","Object","keys","filter","name","quick","RegExp","map","join","chunks","write","end","chunk","enc","next","push","self","source","isBuffer","concat","toString","always","undeclared","identifiers","properties","wildcard","err","e","SyntaxError","message","type","emit","globals","forEach","parts","split","prop","indexOf","countprops","value","closeOver","src","length","values","key","wrappedSource","extra","names","slice","splice","debug","sourceFile","sourceMap","create","addFile","line","removeComments","comment","props"],"mappings":"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","sourcesContent":["var undeclaredIdentifiers = require('undeclared-identifiers');\nvar through = require('through2');\nvar merge = require('xtend');\nvar parse = require('acorn-node').parse;\n\nvar path = require('path');\nvar isAbsolute = path.isAbsolute || require('path-is-absolute');\nvar processPath = require.resolve('process/browser.js');\nvar isbufferPath = require.resolve('is-buffer')\nvar combineSourceMap = require('combine-source-map');\n\nfunction getRelativeRequirePath(fullPath, fromPath) {\n  var relpath = path.relative(path.dirname(fromPath), fullPath);\n  // If fullPath is in the same directory or a subdirectory of fromPath,\n  // relpath will result in something like \"index.js\", \"src/abc.js\".\n  // require() needs \"./\" prepended to these paths.\n  if (!/^\\./.test(relpath) && !isAbsolute(relpath)) {\n    relpath = \"./\" + relpath;\n  }\n  // On Windows: Convert path separators to what require() expects\n  if (path.sep === '\\\\') {\n    relpath = relpath.replace(/\\\\/g, '/');\n  }\n  return relpath;\n}\n\nvar defaultVars = {\n    process: function (file) {\n        var relpath = getRelativeRequirePath(processPath, file);\n        return 'require(' + JSON.stringify(relpath) + ')';\n    },\n    global: function () {\n        return 'typeof global !== \"undefined\" ? global : '\n            + 'typeof self !== \"undefined\" ? self : '\n            + 'typeof window !== \"undefined\" ? window : {}'\n        ;\n    },\n    'Buffer.isBuffer': function (file) {\n        var relpath = getRelativeRequirePath(isbufferPath, file);\n        return 'require(' + JSON.stringify(relpath) + ')';\n    },\n    Buffer: function () {\n        return 'require(\"buffer\").Buffer';\n    },\n    setImmediate: function () {\n        return 'require(\"timers\").setImmediate';\n    },\n    clearImmediate: function () {\n        return 'require(\"timers\").clearImmediate';\n    },\n    __filename: function (file, basedir) {\n        var relpath = path.relative(basedir, file);\n        // standardize path separators, use slash in Windows too\n        if ( path.sep === '\\\\' ) {\n          relpath = relpath.replace(/\\\\/g, '/');\n        }\n        var filename = '/' + relpath;\n        return JSON.stringify(filename);\n    },\n    __dirname: function (file, basedir) {\n        var relpath = path.relative(basedir, file);\n        // standardize path separators, use slash in Windows too\n        if ( path.sep === '\\\\' ) {\n          relpath = relpath.replace(/\\\\/g, '/');\n        }\n        var dir = path.dirname('/' + relpath );\n        return JSON.stringify(dir);\n    }\n};\n\nmodule.exports = function (file, opts) {\n    if (/\\.json$/i.test(file)) return through();\n    if (!opts) opts = {};\n    \n    var basedir = opts.basedir || '/';\n    var vars = merge(defaultVars, opts.vars);\n    var varNames = Object.keys(vars).filter(function(name) {\n        return typeof vars[name] === 'function';\n    });\n    \n    var quick = RegExp(varNames.map(function (name) {\n        return '\\\\b' + name + '\\\\b';\n    }).join('|'));\n    \n    var chunks = [];\n    \n    return through(write, end);\n    \n    function write (chunk, enc, next) { chunks.push(chunk); next() }\n    \n    function end () {\n        var self = this;\n        var source = Buffer.isBuffer(chunks[0])\n            ? Buffer.concat(chunks).toString('utf8')\n            : chunks.join('')\n        ;\n        source = source\n            .replace(/^\\ufeff/, '')\n            .replace(/^#![^\\n]*\\n/, '\\n');\n        \n        if (opts.always !== true && !quick.test(source)) {\n            this.push(source);\n            this.push(null);\n            return;\n        }\n        \n        try {\n            var undeclared = opts.always\n                ? { identifiers: varNames, properties: [] }\n                : undeclaredIdentifiers(parse(source), { wildcard: true })\n            ;\n        }\n        catch (err) {\n            var e = new SyntaxError(\n                (err.message || err) + ' while parsing ' + file\n            );\n            e.type = 'syntax';\n            e.filename = file;\n            return this.emit('error', e);\n        }\n        \n        var globals = {};\n        \n        varNames.forEach(function (name) {\n            if (!/\\./.test(name)) return;\n            var parts = name.split('.')\n            var prop = undeclared.properties.indexOf(name)\n            if (prop === -1 || countprops(undeclared.properties, parts[0]) > 1) return;\n            var value = vars[name](file, basedir);\n            if (!value) return;\n            globals[parts[0]] = '{'\n                + JSON.stringify(parts[1]) + ':' + value + '}';\n            self.emit('global', name);\n        });\n        varNames.forEach(function (name) {\n            if (/\\./.test(name)) return;\n            if (globals[name]) return;\n            if (undeclared.identifiers.indexOf(name) < 0) return;\n            var value = vars[name](file, basedir);\n            if (!value) return;\n            globals[name] = value;\n            self.emit('global', name);\n        });\n        \n        this.push(closeOver(globals, source, file, opts));\n        this.push(null);\n    }\n};\n\nmodule.exports.vars = defaultVars;\n\nfunction closeOver (globals, src, file, opts) {\n    var keys = Object.keys(globals);\n    if (keys.length === 0) return src;\n    var values = keys.map(function (key) { return globals[key] });\n    \n    var wrappedSource;\n    if (keys.length <= 3) {\n        wrappedSource = '(function (' + keys.join(',') + '){\\n'\n            + src + '\\n}).call(this,' + values.join(',') + ')'\n        ;\n    }\n    else {\n      // necessary to make arguments[3..6] still work for workerify etc\n      // a,b,c,arguments[3..6],d,e,f...\n      var extra = [ '__argument0', '__argument1', '__argument2', '__argument3' ];\n      var names = keys.slice(0,3).concat(extra).concat(keys.slice(3));\n      values.splice(3, 0,\n          'arguments[3]','arguments[4]',\n          'arguments[5]','arguments[6]'\n      );\n      wrappedSource = '(function (' + names.join(',') + '){\\n'\n        + src + '\\n}).call(this,' + values.join(',') + ')';\n    }\n\n    // Generate source maps if wanted. Including the right offset for\n    // the wrapped source.\n    if (!opts.debug) {\n        return wrappedSource;\n    }\n    var sourceFile = path.relative(opts.basedir, file)\n        .replace(/\\\\/g, '/');\n    var sourceMap = combineSourceMap.create().addFile(\n        { sourceFile: sourceFile, source: src},\n        { line: 1 });\n    return combineSourceMap.removeComments(wrappedSource) + \"\\n\"\n        + sourceMap.comment();\n}\n\nfunction countprops (props, name) {\n    return props.filter(function (prop) {\n        return prop.slice(0, name.length + 1) === name + '.';\n    }).length;\n}\n"]},"metadata":{},"sourceType":"script"}