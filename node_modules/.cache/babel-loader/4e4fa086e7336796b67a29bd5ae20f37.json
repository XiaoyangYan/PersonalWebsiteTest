{"ast":null,"code":"var JSONStream = require('JSONStream');\n\nvar defined = require('defined');\n\nvar through = require('through2');\n\nvar umd = require('umd');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar combineSourceMap = require('combine-source-map');\n\nvar defaultPreludePath = path.join(__dirname, '_prelude.js');\nvar defaultPrelude = fs.readFileSync(defaultPreludePath, 'utf8');\n\nfunction newlinesIn(src) {\n  if (!src) return 0;\n  var newlines = src.match(/\\n/g);\n  return newlines ? newlines.length : 0;\n}\n\nmodule.exports = function (opts) {\n  if (!opts) opts = {};\n  var parser = opts.raw ? through.obj() : JSONStream.parse([true]);\n  var stream = through.obj(function (buf, enc, next) {\n    parser.write(buf);\n    next();\n  }, function () {\n    parser.end();\n  });\n  parser.pipe(through.obj(write, end));\n  stream.standaloneModule = opts.standaloneModule;\n  stream.hasExports = opts.hasExports;\n  var first = true;\n  var entries = [];\n  var basedir = defined(opts.basedir, process.cwd());\n  var prelude = opts.prelude || defaultPrelude;\n  var preludePath = opts.preludePath || path.relative(basedir, defaultPreludePath).replace(/\\\\/g, '/');\n  var lineno = 1 + newlinesIn(prelude);\n  var sourcemap;\n  return stream;\n\n  function write(row, enc, next) {\n    if (first && opts.standalone) {\n      var pre = umd.prelude(opts.standalone).trim();\n      stream.push(Buffer.from(pre + 'return ', 'utf8'));\n    } else if (first && stream.hasExports) {\n      var pre = opts.externalRequireName || 'require';\n      stream.push(Buffer.from(pre + '=', 'utf8'));\n    }\n\n    if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n\n    if (row.sourceFile && !row.nomap) {\n      if (!sourcemap) {\n        sourcemap = combineSourceMap.create(null, opts.sourceRoot);\n        sourcemap.addFile({\n          sourceFile: preludePath,\n          source: prelude\n        }, {\n          line: 0\n        });\n      }\n\n      sourcemap.addFile({\n        sourceFile: row.sourceFile,\n        source: row.source\n      }, {\n        line: lineno\n      });\n    }\n\n    var wrappedSource = [first ? '' : ',', JSON.stringify(row.id), ':[', 'function(require,module,exports){\\n', combineSourceMap.removeComments(row.source), '\\n},', '{' + Object.keys(row.deps || {}).sort().map(function (key) {\n      return JSON.stringify(key) + ':' + JSON.stringify(row.deps[key]);\n    }).join(',') + '}', ']'].join('');\n    stream.push(Buffer.from(wrappedSource, 'utf8'));\n    lineno += newlinesIn(wrappedSource);\n    first = false;\n\n    if (row.entry && row.order !== undefined) {\n      entries[row.order] = row.id;\n    } else if (row.entry) entries.push(row.id);\n\n    next();\n  }\n\n  function end() {\n    if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n    entries = entries.filter(function (x) {\n      return x !== undefined;\n    });\n    stream.push(Buffer.from('},{},' + JSON.stringify(entries) + ')', 'utf8'));\n\n    if (opts.standalone && !first) {\n      stream.push(Buffer.from('(' + JSON.stringify(stream.standaloneModule) + ')' + umd.postlude(opts.standalone), 'utf8'));\n    }\n\n    if (sourcemap) {\n      var comment = sourcemap.comment();\n\n      if (opts.sourceMapPrefix) {\n        comment = comment.replace(/^\\/\\/#/, function () {\n          return opts.sourceMapPrefix;\n        });\n      }\n\n      stream.push(Buffer.from('\\n' + comment + '\\n', 'utf8'));\n    }\n\n    if (!sourcemap && !opts.standalone) {\n      stream.push(Buffer.from(';\\n', 'utf8'));\n    }\n\n    stream.push(null);\n  }\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/browser-pack/index.js"],"names":["JSONStream","require","defined","through","umd","Buffer","fs","path","combineSourceMap","defaultPreludePath","join","__dirname","defaultPrelude","readFileSync","newlinesIn","src","newlines","match","length","module","exports","opts","parser","raw","obj","parse","stream","buf","enc","next","write","end","pipe","standaloneModule","hasExports","first","entries","basedir","process","cwd","prelude","preludePath","relative","replace","lineno","sourcemap","row","standalone","pre","trim","push","from","externalRequireName","sourceFile","nomap","create","sourceRoot","addFile","source","line","wrappedSource","JSON","stringify","id","removeComments","Object","keys","deps","sort","map","key","entry","order","undefined","filter","x","postlude","comment","sourceMapPrefix"],"mappings":"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","sourcesContent":["var JSONStream = require('JSONStream');\nvar defined = require('defined');\nvar through = require('through2');\nvar umd = require('umd');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar combineSourceMap = require('combine-source-map');\n\nvar defaultPreludePath = path.join(__dirname, '_prelude.js');\nvar defaultPrelude = fs.readFileSync(defaultPreludePath, 'utf8');\n\nfunction newlinesIn(src) {\n  if (!src) return 0;\n  var newlines = src.match(/\\n/g);\n\n  return newlines ? newlines.length : 0;\n}\n\nmodule.exports = function (opts) {\n    if (!opts) opts = {};\n    var parser = opts.raw ? through.obj() : JSONStream.parse([ true ]);\n    var stream = through.obj(\n        function (buf, enc, next) { parser.write(buf); next() },\n        function () { parser.end() }\n    );\n    parser.pipe(through.obj(write, end));\n    stream.standaloneModule = opts.standaloneModule;\n    stream.hasExports = opts.hasExports;\n    \n    var first = true;\n    var entries = [];\n    var basedir = defined(opts.basedir, process.cwd());\n    var prelude = opts.prelude || defaultPrelude;\n    var preludePath = opts.preludePath ||\n        path.relative(basedir, defaultPreludePath).replace(/\\\\/g, '/');\n    \n    var lineno = 1 + newlinesIn(prelude);\n    var sourcemap;\n    \n    return stream;\n    \n    function write (row, enc, next) {\n        if (first && opts.standalone) {\n            var pre = umd.prelude(opts.standalone).trim();\n            stream.push(Buffer.from(pre + 'return ', 'utf8'));\n        }\n        else if (first && stream.hasExports) {\n            var pre = opts.externalRequireName || 'require';\n            stream.push(Buffer.from(pre + '=', 'utf8'));\n        }\n        if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n        \n        if (row.sourceFile && !row.nomap) {\n            if (!sourcemap) {\n                sourcemap = combineSourceMap.create(null, opts.sourceRoot);\n                sourcemap.addFile(\n                    { sourceFile: preludePath, source: prelude },\n                    { line: 0 }\n                );\n            }\n            sourcemap.addFile(\n                { sourceFile: row.sourceFile, source: row.source },\n                { line: lineno }\n            );\n        }\n        \n        var wrappedSource = [\n            (first ? '' : ','),\n            JSON.stringify(row.id),\n            ':[',\n            'function(require,module,exports){\\n',\n            combineSourceMap.removeComments(row.source),\n            '\\n},',\n            '{' + Object.keys(row.deps || {}).sort().map(function (key) {\n                return JSON.stringify(key) + ':'\n                    + JSON.stringify(row.deps[key])\n                ;\n            }).join(',') + '}',\n            ']'\n        ].join('');\n\n        stream.push(Buffer.from(wrappedSource, 'utf8'));\n        lineno += newlinesIn(wrappedSource);\n        \n        first = false;\n        if (row.entry && row.order !== undefined) {\n            entries[row.order] = row.id;\n        }\n        else if (row.entry) entries.push(row.id);\n        next();\n    }\n    \n    function end () {\n        if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n        entries = entries.filter(function (x) { return x !== undefined });\n        \n        stream.push(\n            Buffer.from('},{},' + JSON.stringify(entries) + ')', 'utf8')\n        );\n\n        if (opts.standalone && !first) {\n            stream.push(Buffer.from(\n                '(' + JSON.stringify(stream.standaloneModule) + ')'\n                    + umd.postlude(opts.standalone),\n                'utf8'\n            ));\n        }\n        \n        if (sourcemap) {\n            var comment = sourcemap.comment();\n            if (opts.sourceMapPrefix) {\n                comment = comment.replace(\n                    /^\\/\\/#/, function () { return opts.sourceMapPrefix }\n                )\n            }\n            stream.push(Buffer.from('\\n' + comment + '\\n', 'utf8'));\n        }\n        if (!sourcemap && !opts.standalone) {\n            stream.push(Buffer.from(';\\n', 'utf8'));\n        }\n\n        stream.push(null);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}