{"ast":null,"code":"// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar util = require('core-util-is');\n\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\nvar keys = objectKeys(Writable.prototype);\n\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  if (options && options.readable === false) this.readable = false;\n  if (options && options.writable === false) this.writable = false;\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n  this.once('end', onend);\n} // the no-half-open enforcer\n\n\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/browserify/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_duplex.js"],"names":["objectKeys","Object","keys","obj","key","push","module","exports","Duplex","processNextTick","require","util","inherits","Readable","Writable","prototype","v","length","method","options","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","onEndNT","self","end","forEach","xs","f","i","l"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,IAAIA,UAAU,GAAGC,MAAM,CAACC,IAAP,IAAe,UAAUC,GAAV,EAAe;AAC7C,MAAID,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIE,GAAT,IAAgBD,GAAhB,EAAqB;AACnBD,IAAAA,IAAI,CAACG,IAAL,CAAUD,GAAV;AACD;;AAAA,SAAOF,IAAP;AACF,CALD;AAMA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,sBAAD,CAA7B;AACA;;AAEA;;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,cAAD,CAAlB;;AACAC,IAAI,CAACC,QAAL,GAAgBF,OAAO,CAAC,UAAD,CAAvB;AACA;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,oBAAD,CAAtB;;AAEAC,IAAI,CAACC,QAAL,CAAcJ,MAAd,EAAsBK,QAAtB;AAEA,IAAIX,IAAI,GAAGF,UAAU,CAACc,QAAQ,CAACC,SAAV,CAArB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAAI,CAACe,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,MAAIE,MAAM,GAAGhB,IAAI,CAACc,CAAD,CAAjB;AACA,MAAI,CAACR,MAAM,CAACO,SAAP,CAAiBG,MAAjB,CAAL,EAA+BV,MAAM,CAACO,SAAP,CAAiBG,MAAjB,IAA2BJ,QAAQ,CAACC,SAAT,CAAmBG,MAAnB,CAA3B;AAChC;;AAED,SAASV,MAAT,CAAgBW,OAAhB,EAAyB;AACvB,MAAI,EAAE,gBAAgBX,MAAlB,CAAJ,EAA+B,OAAO,IAAIA,MAAJ,CAAWW,OAAX,CAAP;AAE/BN,EAAAA,QAAQ,CAACO,IAAT,CAAc,IAAd,EAAoBD,OAApB;AACAL,EAAAA,QAAQ,CAACM,IAAT,CAAc,IAAd,EAAoBD,OAApB;AAEA,MAAIA,OAAO,IAAIA,OAAO,CAACE,QAAR,KAAqB,KAApC,EAA2C,KAAKA,QAAL,GAAgB,KAAhB;AAE3C,MAAIF,OAAO,IAAIA,OAAO,CAACG,QAAR,KAAqB,KAApC,EAA2C,KAAKA,QAAL,GAAgB,KAAhB;AAE3C,OAAKC,aAAL,GAAqB,IAArB;AACA,MAAIJ,OAAO,IAAIA,OAAO,CAACI,aAAR,KAA0B,KAAzC,EAAgD,KAAKA,aAAL,GAAqB,KAArB;AAEhD,OAAKC,IAAL,CAAU,KAAV,EAAiBC,KAAjB;AACD,C,CAED;;;AACA,SAASA,KAAT,GAAiB;AACf;AACA;AACA,MAAI,KAAKF,aAAL,IAAsB,KAAKG,cAAL,CAAoBC,KAA9C,EAAqD,OAHtC,CAKf;AACA;;AACAlB,EAAAA,eAAe,CAACmB,OAAD,EAAU,IAAV,CAAf;AACD;;AAED,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AACrBA,EAAAA,IAAI,CAACC,GAAL;AACD;;AAED,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,CAArB,EAAwB;AACtB,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,EAAE,CAACf,MAAvB,EAA+BiB,CAAC,GAAGC,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;AACzCD,IAAAA,CAAC,CAACD,EAAE,CAACE,CAAD,CAAH,EAAQA,CAAR,CAAD;AACD;AACF","sourcesContent":["// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}"]},"metadata":{},"sourceType":"script"}