{"ast":null,"code":"//\n// vargs.js\n//\n//   variable argument handling for functions taking a callback\n//\n// usage:\n//   \n//   var Args = new(\"vargs\").Constructor;\n//\n//   function (/* [arg1, arg2, ...][,callback] */) {\n//       var args = new(Args)(arguments);\n//       \n//       args.first;    // first argument\n//       args.last;     // last argument before callback\n//       args.callback; // callback argument, or an empty function\n//       args.all;      // all arguments except callback\n//       args.length;   // number of arguments, not including callback\n//       \n//       args.callbackGiven() // returns true or false\n//       args.at(-1)          // last argument, including callback\n//       args.array           // all arguments, including callback\n//   }\n//\nexports.Constructor = function Vargs(arguments) {\n  this.array = Array.prototype.slice.call(arguments);\n\n  this.__defineGetter__('length', function () {\n    if (this.callbackGiven()) {\n      return this.array.length - 1;\n    } else {\n      return this.array.length;\n    }\n  });\n\n  this.__defineGetter__('all', function () {\n    if (this.callbackGiven()) {\n      return this.array.slice(0, -1);\n    } else {\n      return this.array;\n    }\n  });\n\n  this.__defineGetter__('last', function () {\n    if (typeof this.at(-1) === 'function') {\n      return this.at(-2);\n    } else {\n      return this.at(-1);\n    }\n  });\n\n  this.__defineGetter__('first', function () {\n    return this.array[0];\n  });\n\n  this.callback = this.callbackGiven() ? this.at(-1) : function () {};\n};\n\nexports.Constructor.prototype = {\n  callbackGiven: function () {\n    return typeof this.at(-1) === 'function';\n  },\n  at: function (n) {\n    if (n < 0) {\n      return this.array[this.array.length + n];\n    } else {\n      return this.array[n];\n    }\n  }\n};\n\nexports.Constructor.last = function (args) {\n  return args[args.length - 1];\n};","map":{"version":3,"sources":["/home/yanxiaoyang/react-project/PersonalWebsiteTest/node_modules/vargs/lib/vargs.js"],"names":["exports","Constructor","Vargs","arguments","array","Array","prototype","slice","call","__defineGetter__","callbackGiven","length","at","callback","n","last","args"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,WAAR,GAAsB,SAASC,KAAT,CAAeC,SAAf,EAA0B;AAC5C,OAAKC,KAAL,GAAaC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,SAA3B,CAAb;;AACA,OAAKM,gBAAL,CAAsB,QAAtB,EAAgC,YAAY;AACxC,QAAI,KAAKC,aAAL,EAAJ,EAA0B;AACtB,aAAO,KAAKN,KAAL,CAAWO,MAAX,GAAoB,CAA3B;AACH,KAFD,MAEO;AACH,aAAO,KAAKP,KAAL,CAAWO,MAAlB;AACH;AACJ,GAND;;AAOA,OAAKF,gBAAL,CAAsB,KAAtB,EAA6B,YAAY;AACrC,QAAI,KAAKC,aAAL,EAAJ,EAA0B;AACtB,aAAO,KAAKN,KAAL,CAAWG,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAKH,KAAZ;AACH;AACJ,GAND;;AAOA,OAAKK,gBAAL,CAAsB,MAAtB,EAA8B,YAAY;AACtC,QAAI,OAAO,KAAKG,EAAL,CAAQ,CAAC,CAAT,CAAP,KAAwB,UAA5B,EAAwC;AACpC,aAAO,KAAKA,EAAL,CAAQ,CAAC,CAAT,CAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAKA,EAAL,CAAQ,CAAC,CAAT,CAAP;AACH;AACJ,GAND;;AAOA,OAAKH,gBAAL,CAAsB,OAAtB,EAA+B,YAAY;AACvC,WAAO,KAAKL,KAAL,CAAW,CAAX,CAAP;AACH,GAFD;;AAGA,OAAKS,QAAL,GAAgB,KAAKH,aAAL,KAAuB,KAAKE,EAAL,CAAQ,CAAC,CAAT,CAAvB,GACuB,YAAY,CAAE,CADrD;AAEH,CA5BD;;AA8BAZ,OAAO,CAACC,WAAR,CAAoBK,SAApB,GAAgC;AAC5BI,EAAAA,aAAa,EAAE,YAAY;AACvB,WAAO,OAAO,KAAKE,EAAL,CAAQ,CAAC,CAAT,CAAP,KAAwB,UAA/B;AACH,GAH2B;AAI5BA,EAAAA,EAAE,EAAE,UAAUE,CAAV,EAAa;AACb,QAAIA,CAAC,GAAG,CAAR,EAAW;AACP,aAAO,KAAKV,KAAL,CAAW,KAAKA,KAAL,CAAWO,MAAX,GAAoBG,CAA/B,CAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAKV,KAAL,CAAWU,CAAX,CAAP;AACH;AACJ;AAV2B,CAAhC;;AAaAd,OAAO,CAACC,WAAR,CAAoBc,IAApB,GAA2B,UAAUC,IAAV,EAAgB;AACvC,SAAOA,IAAI,CAACA,IAAI,CAACL,MAAL,GAAc,CAAf,CAAX;AACH,CAFD","sourcesContent":["//\n// vargs.js\n//\n//   variable argument handling for functions taking a callback\n//\n// usage:\n//   \n//   var Args = new(\"vargs\").Constructor;\n//\n//   function (/* [arg1, arg2, ...][,callback] */) {\n//       var args = new(Args)(arguments);\n//       \n//       args.first;    // first argument\n//       args.last;     // last argument before callback\n//       args.callback; // callback argument, or an empty function\n//       args.all;      // all arguments except callback\n//       args.length;   // number of arguments, not including callback\n//       \n//       args.callbackGiven() // returns true or false\n//       args.at(-1)          // last argument, including callback\n//       args.array           // all arguments, including callback\n//   }\n//\nexports.Constructor = function Vargs(arguments) {\n    this.array = Array.prototype.slice.call(arguments);\n    this.__defineGetter__('length', function () {\n        if (this.callbackGiven()) {\n            return this.array.length - 1;\n        } else {\n            return this.array.length;\n        }\n    });\n    this.__defineGetter__('all', function () {\n        if (this.callbackGiven()) {\n            return this.array.slice(0, -1);\n        } else {\n            return this.array;\n        }\n    });\n    this.__defineGetter__('last', function () {\n        if (typeof(this.at(-1)) === 'function') {\n            return this.at(-2);\n        } else {\n            return this.at(-1);\n        }\n    });\n    this.__defineGetter__('first', function () {\n        return this.array[0];\n    });\n    this.callback = this.callbackGiven() ? this.at(-1)\n                                         : function () {};\n};\n\nexports.Constructor.prototype = {\n    callbackGiven: function () {\n        return typeof(this.at(-1)) === 'function';\n    },\n    at: function (n) {\n        if (n < 0) {\n            return this.array[this.array.length + n];\n        } else {\n            return this.array[n];\n        }\n    }\n};\n\nexports.Constructor.last = function (args) {\n    return args[args.length - 1];\n};\n\n"]},"metadata":{},"sourceType":"script"}